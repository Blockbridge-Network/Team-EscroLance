{
	"id": "ec710664b43f11b6e4dbdf35e0a31384",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"dJOB.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"./TokenAuthority.sol\";\r\n\r\ncontract dJOB is ERC20 {\r\n    TokenAuthority public authority;\r\n\r\n    constructor(address _authority) ERC20(\"dJOB\", \"dJOB\") {\r\n        authority = TokenAuthority(_authority);\r\n        _mint(msg.sender, 1000000 * 10 ** 18); // Initial mint\r\n    }\r\n\r\n    function mint(address to, uint256 amount) external {\r\n        require(authority.isMinter(msg.sender), \"Not authorized to mint\");\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(address from, uint256 amount) external {\r\n        require(authority.isBurner(msg.sender), \"Not authorized to burn\");\r\n        _burn(from, amount);\r\n    }\r\n}\r\n"
			},
			"TokenAuthority.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title TokenAuthority\r\n * @dev Manages roles and access rights for the dJOB token and platform contracts.\r\n */\r\ncontract TokenAuthority is AccessControl {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\r\n    bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\");\r\n\r\n    constructor(address admin) {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\r\n        _grantRole(MINTER_ROLE, admin);\r\n        _grantRole(BURNER_ROLE, admin);\r\n        _grantRole(OPERATOR_ROLE, admin);\r\n    }\r\n\r\n    function grantMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        grantRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    function revokeMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        revokeRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    function grantBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        grantRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    function revokeBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        revokeRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    function grantOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        grantRole(OPERATOR_ROLE, account);\r\n    }\r\n\r\n    function revokeOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        revokeRole(OPERATOR_ROLE, account);\r\n    }\r\n\r\n    function isMinter(address account) external view returns (bool) {\r\n        return hasRole(MINTER_ROLE, account);\r\n    }\r\n\r\n    function isBurner(address account) external view returns (bool) {\r\n        return hasRole(BURNER_ROLE, account);\r\n    }\r\n\r\n    function isOperator(address account) external view returns (bool) {\r\n        return hasRole(OPERATOR_ROLE, account);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenAuthority.sol": {
				"TokenAuthority": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OPERATOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBurner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeBurner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Manages roles and access rights for the dJOB token and platform contracts.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "TokenAuthority",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenAuthority.sol\":243:1918  contract TokenAuthority is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"TokenAuthority.sol\":504:712  constructor(address admin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TokenAuthority.sol\":542:579  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"TokenAuthority.sol\":553:571  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"TokenAuthority.sol\":573:578  admin */\n  dup3\n    /* \"TokenAuthority.sol\":542:552  _grantRole */\n  shl(0x20, tag_7)\n    /* \"TokenAuthority.sol\":542:579  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"TokenAuthority.sol\":590:620  _grantRole(MINTER_ROLE, admin) */\n  tag_8\n    /* \"TokenAuthority.sol\":329:353  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"TokenAuthority.sol\":614:619  admin */\n  dup3\n    /* \"TokenAuthority.sol\":590:600  _grantRole */\n  shl(0x20, tag_7)\n    /* \"TokenAuthority.sol\":590:620  _grantRole(MINTER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"TokenAuthority.sol\":631:661  _grantRole(BURNER_ROLE, admin) */\n  tag_9\n    /* \"TokenAuthority.sol\":398:422  keccak256(\"BURNER_ROLE\") */\n  0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n    /* \"TokenAuthority.sol\":655:660  admin */\n  dup3\n    /* \"TokenAuthority.sol\":631:641  _grantRole */\n  shl(0x20, tag_7)\n    /* \"TokenAuthority.sol\":631:661  _grantRole(BURNER_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"TokenAuthority.sol\":672:704  _grantRole(OPERATOR_ROLE, admin) */\n  tag_10\n    /* \"TokenAuthority.sol\":469:495  keccak256(\"OPERATOR_ROLE\") */\n  0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n    /* \"TokenAuthority.sol\":698:703  admin */\n  dup3\n    /* \"TokenAuthority.sol\":672:682  _grantRole */\n  shl(0x20, tag_7)\n    /* \"TokenAuthority.sol\":672:704  _grantRole(OPERATOR_ROLE, admin) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n  pop\n    /* \"TokenAuthority.sol\":504:712  constructor(address admin) {... */\n  pop\n    /* \"TokenAuthority.sol\":243:1918  contract TokenAuthority is AccessControl {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_16\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_12:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_42\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":932:1051   */\ntag_41:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_43\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_27\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TokenAuthority.sol\":243:1918  contract TokenAuthority is AccessControl {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenAuthority.sol\":243:1918  contract TokenAuthority is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d70f7ae\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe348da13\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf5b541a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfad8b32a\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x6d70f7ae\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcfbd4885\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x261707fa\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x261707fa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4334614a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0900cc33\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10511f96\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":1124:1252  function revokeBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"TokenAuthority.sol\":990:1116  function grantBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":720:846  function grantMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"TokenAuthority.sol\":360:422  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"TokenAuthority.sol\":1665:1784  function isBurner(address account) external view returns (bool) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":1792:1915  function isOperator(address account) external view returns (bool) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":1538:1657  function isMinter(address account) external view returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":854:982  function revokeMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"TokenAuthority.sol\":291:353  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"TokenAuthority.sol\":1260:1390  function grantOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"TokenAuthority.sol\":429:495  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenAuthority.sol\":1398:1530  function revokeOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":1124:1252  function revokeBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":1181:1199  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_99:\n        /* \"TokenAuthority.sol\":1212:1244  revokeRole(BURNER_ROLE, account) */\n      tag_102\n        /* \"TokenAuthority.sol\":398:422  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"TokenAuthority.sol\":1236:1243  account */\n      dup4\n        /* \"TokenAuthority.sol\":1212:1222  revokeRole */\n      tag_84\n        /* \"TokenAuthority.sol\":1212:1244  revokeRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_102:\n        /* \"TokenAuthority.sol\":1124:1252  function revokeBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":990:1116  function grantBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":1046:1064  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_104:\n        /* \"TokenAuthority.sol\":1077:1108  grantRole(BURNER_ROLE, account) */\n      tag_106\n        /* \"TokenAuthority.sol\":398:422  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"TokenAuthority.sol\":1100:1107  account */\n      dup4\n        /* \"TokenAuthority.sol\":1077:1086  grantRole */\n      tag_53\n        /* \"TokenAuthority.sol\":1077:1108  grantRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_106:\n        /* \"TokenAuthority.sol\":990:1116  function grantBurner(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":720:846  function grantMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":776:794  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_109:\n        /* \"TokenAuthority.sol\":807:838  grantRole(MINTER_ROLE, account) */\n      tag_111\n        /* \"TokenAuthority.sol\":329:353  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"TokenAuthority.sol\":830:837  account */\n      dup4\n        /* \"TokenAuthority.sol\":807:816  grantRole */\n      tag_53\n        /* \"TokenAuthority.sol\":807:838  grantRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_111:\n        /* \"TokenAuthority.sol\":720:846  function grantMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":360:422  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_48:\n        /* \"TokenAuthority.sol\":398:422  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"TokenAuthority.sol\":360:422  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_41\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_116:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_122:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":1665:1784  function isBurner(address account) external view returns (bool) {... */\n    tag_59:\n        /* \"TokenAuthority.sol\":1723:1727  bool */\n      0x00\n        /* \"TokenAuthority.sol\":1747:1776  hasRole(BURNER_ROLE, account) */\n      tag_125\n        /* \"TokenAuthority.sol\":398:422  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"TokenAuthority.sol\":1768:1775  account */\n      dup4\n        /* \"TokenAuthority.sol\":1747:1754  hasRole */\n      tag_67\n        /* \"TokenAuthority.sol\":1747:1776  hasRole(BURNER_ROLE, account) */\n      jump\t// in\n    tag_125:\n        /* \"TokenAuthority.sol\":1740:1776  return hasRole(BURNER_ROLE, account) */\n      swap1\n      pop\n        /* \"TokenAuthority.sol\":1665:1784  function isBurner(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":1792:1915  function isOperator(address account) external view returns (bool) {... */\n    tag_63:\n        /* \"TokenAuthority.sol\":1852:1856  bool */\n      0x00\n        /* \"TokenAuthority.sol\":1876:1907  hasRole(OPERATOR_ROLE, account) */\n      tag_127\n        /* \"TokenAuthority.sol\":469:495  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"TokenAuthority.sol\":1899:1906  account */\n      dup4\n        /* \"TokenAuthority.sol\":1876:1883  hasRole */\n      tag_67\n        /* \"TokenAuthority.sol\":1876:1907  hasRole(OPERATOR_ROLE, account) */\n      jump\t// in\n    tag_127:\n        /* \"TokenAuthority.sol\":1869:1907  return hasRole(OPERATOR_ROLE, account) */\n      swap1\n      pop\n        /* \"TokenAuthority.sol\":1792:1915  function isOperator(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"TokenAuthority.sol\":1538:1657  function isMinter(address account) external view returns (bool) {... */\n    tag_74:\n        /* \"TokenAuthority.sol\":1596:1600  bool */\n      0x00\n        /* \"TokenAuthority.sol\":1620:1649  hasRole(MINTER_ROLE, account) */\n      tag_130\n        /* \"TokenAuthority.sol\":329:353  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"TokenAuthority.sol\":1641:1648  account */\n      dup4\n        /* \"TokenAuthority.sol\":1620:1627  hasRole */\n      tag_67\n        /* \"TokenAuthority.sol\":1620:1649  hasRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_130:\n        /* \"TokenAuthority.sol\":1613:1649  return hasRole(MINTER_ROLE, account) */\n      swap1\n      pop\n        /* \"TokenAuthority.sol\":1538:1657  function isMinter(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":854:982  function revokeMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":911:929  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_132:\n        /* \"TokenAuthority.sol\":942:974  revokeRole(MINTER_ROLE, account) */\n      tag_134\n        /* \"TokenAuthority.sol\":329:353  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"TokenAuthority.sol\":966:973  account */\n      dup4\n        /* \"TokenAuthority.sol\":942:952  revokeRole */\n      tag_84\n        /* \"TokenAuthority.sol\":942:974  revokeRole(MINTER_ROLE, account) */\n      jump\t// in\n    tag_134:\n        /* \"TokenAuthority.sol\":854:982  function revokeMinter(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":291:353  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_80:\n        /* \"TokenAuthority.sol\":329:353  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"TokenAuthority.sol\":291:353  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_41\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_139:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":1260:1390  function grantOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":1318:1336  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_141:\n        /* \"TokenAuthority.sol\":1349:1382  grantRole(OPERATOR_ROLE, account) */\n      tag_143\n        /* \"TokenAuthority.sol\":469:495  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"TokenAuthority.sol\":1374:1381  account */\n      dup4\n        /* \"TokenAuthority.sol\":1349:1358  grantRole */\n      tag_53\n        /* \"TokenAuthority.sol\":1349:1382  grantRole(OPERATOR_ROLE, account) */\n      jump\t// in\n    tag_143:\n        /* \"TokenAuthority.sol\":1260:1390  function grantOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TokenAuthority.sol\":429:495  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n    tag_89:\n        /* \"TokenAuthority.sol\":469:495  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"TokenAuthority.sol\":429:495  bytes32 public constant OPERATOR_ROLE = keccak256(\"OPERATOR_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"TokenAuthority.sol\":1398:1530  function revokeOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"TokenAuthority.sol\":1457:1475  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_145:\n        /* \"TokenAuthority.sol\":1488:1522  revokeRole(OPERATOR_ROLE, account) */\n      tag_147\n        /* \"TokenAuthority.sol\":469:495  keccak256(\"OPERATOR_ROLE\") */\n      0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929\n        /* \"TokenAuthority.sol\":1514:1521  account */\n      dup4\n        /* \"TokenAuthority.sol\":1488:1498  revokeRole */\n      tag_84\n        /* \"TokenAuthority.sol\":1488:1522  revokeRole(OPERATOR_ROLE, account) */\n      jump\t// in\n    tag_147:\n        /* \"TokenAuthority.sol\":1398:1530  function revokeOperator(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_153)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_153:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6838:6842  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6851  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6837  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6830:6852  hasRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6875:6879  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6888  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6889:6896  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6961  _msgSender */\n      tag_120\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6951:6963  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6942:6949  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6936:6940  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      swap1\n      pop\n      jump(tag_159)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7027:7032  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7020:7032  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_159:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_172:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_173:\n        /* \"#utility.yul\":561:584   */\n      tag_192\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_172\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_193:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_174:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_195\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_173\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_198\n      tag_170\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":833:952   */\n    tag_197:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_199\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_174\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_175:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_176:\n        /* \"#utility.yul\":1268:1289   */\n      tag_202\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_175\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_204\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_176\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_177:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_178:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_207\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_177\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_179:\n        /* \"#utility.yul\":1825:1849   */\n      tag_209\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_178\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_210:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_180:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_212\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_179\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_33:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_215\n      tag_170\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2101:2220   */\n    tag_214:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_216\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_180\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_181:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_182:\n        /* \"#utility.yul\":2516:2540   */\n      tag_219\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_181\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_220:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_183:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_222\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_182\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3045   */\n    tag_40:\n        /* \"#utility.yul\":2775:2781   */\n      0x00\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2812:2821   */\n      dup3\n        /* \"#utility.yul\":2803:2810   */\n      dup5\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2911   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_225\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2792:2911   */\n    tag_224:\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2975:3028   */\n      tag_226\n        /* \"#utility.yul\":3020:3027   */\n      dup5\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup6\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_183\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2921:3038   */\n      pop\n        /* \"#utility.yul\":2716:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3169   */\n    tag_184:\n        /* \"#utility.yul\":3138:3162   */\n      tag_228\n        /* \"#utility.yul\":3156:3161   */\n      dup2\n        /* \"#utility.yul\":3138:3162   */\n      tag_181\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3133:3136   */\n      dup3\n        /* \"#utility.yul\":3126:3163   */\n      mstore\n        /* \"#utility.yul\":3051:3169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3397   */\n    tag_43:\n        /* \"#utility.yul\":3268:3272   */\n      0x00\n        /* \"#utility.yul\":3306:3308   */\n      0x20\n        /* \"#utility.yul\":3295:3304   */\n      dup3\n        /* \"#utility.yul\":3291:3309   */\n      add\n        /* \"#utility.yul\":3283:3309   */\n      swap1\n      pop\n        /* \"#utility.yul\":3319:3390   */\n      tag_230\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3376:3385   */\n      dup4\n        /* \"#utility.yul\":3372:3389   */\n      add\n        /* \"#utility.yul\":3363:3369   */\n      dup5\n        /* \"#utility.yul\":3319:3390   */\n      tag_184\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3175:3397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3877   */\n    tag_52:\n        /* \"#utility.yul\":3471:3477   */\n      0x00\n        /* \"#utility.yul\":3479:3485   */\n      dup1\n        /* \"#utility.yul\":3528:3530   */\n      0x40\n        /* \"#utility.yul\":3516:3525   */\n      dup4\n        /* \"#utility.yul\":3507:3514   */\n      dup6\n        /* \"#utility.yul\":3503:3526   */\n      sub\n        /* \"#utility.yul\":3499:3531   */\n      slt\n        /* \"#utility.yul\":3496:3615   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":3534:3613   */\n      tag_233\n      tag_170\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3496:3615   */\n    tag_232:\n        /* \"#utility.yul\":3654:3655   */\n      0x00\n        /* \"#utility.yul\":3679:3732   */\n      tag_234\n        /* \"#utility.yul\":3724:3731   */\n      dup6\n        /* \"#utility.yul\":3715:3721   */\n      dup3\n        /* \"#utility.yul\":3704:3713   */\n      dup7\n        /* \"#utility.yul\":3700:3722   */\n      add\n        /* \"#utility.yul\":3679:3732   */\n      tag_183\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3669:3732   */\n      swap3\n      pop\n        /* \"#utility.yul\":3625:3742   */\n      pop\n        /* \"#utility.yul\":3781:3783   */\n      0x20\n        /* \"#utility.yul\":3807:3860   */\n      tag_235\n        /* \"#utility.yul\":3852:3859   */\n      dup6\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup7\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_180\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3752:3870   */\n      pop\n        /* \"#utility.yul\":3403:3877   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4001   */\n    tag_185:\n        /* \"#utility.yul\":3970:3994   */\n      tag_237\n        /* \"#utility.yul\":3988:3993   */\n      dup2\n        /* \"#utility.yul\":3970:3994   */\n      tag_178\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3965:3968   */\n      dup3\n        /* \"#utility.yul\":3958:3995   */\n      mstore\n        /* \"#utility.yul\":3883:4001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4339   */\n    tag_168:\n        /* \"#utility.yul\":4128:4132   */\n      0x00\n        /* \"#utility.yul\":4166:4168   */\n      0x40\n        /* \"#utility.yul\":4155:4164   */\n      dup3\n        /* \"#utility.yul\":4151:4169   */\n      add\n        /* \"#utility.yul\":4143:4169   */\n      swap1\n      pop\n        /* \"#utility.yul\":4179:4250   */\n      tag_239\n        /* \"#utility.yul\":4247:4248   */\n      0x00\n        /* \"#utility.yul\":4236:4245   */\n      dup4\n        /* \"#utility.yul\":4232:4249   */\n      add\n        /* \"#utility.yul\":4223:4229   */\n      dup6\n        /* \"#utility.yul\":4179:4250   */\n      tag_185\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4260:4332   */\n      tag_240\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4317:4326   */\n      dup4\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4304:4310   */\n      dup5\n        /* \"#utility.yul\":4260:4332   */\n      tag_184\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4007:4339   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aaad3f4df7667f341036437386d4e143c7fc8a68e48ca82c07bdb48a7ac56fe764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1247": {
									"entryPoint": null,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 221,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": 565,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 466,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:11",
										"nodeType": "YulBlock",
										"src": "0:1199:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610fb7380380610fb78339818101604052810190610031919061029a565b6100435f801b826100dd60201b60201c565b506100747f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6826100dd60201b60201c565b506100a57f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848826100dd60201b60201c565b506100d67f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929826100dd60201b60201c565b50506102c5565b5f6100ee83836101d260201b60201c565b6101c85760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061016561023560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101cc565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61026982610240565b9050919050565b6102798161025f565b8114610283575f80fd5b50565b5f8151905061029481610270565b92915050565b5f602082840312156102af576102ae61023c565b5b5f6102bc84828501610286565b91505092915050565b610ce5806102d25f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636d70f7ae116100ab578063d53913931161006f578063d539139314610327578063d547741f14610345578063e348da1314610361578063f5b541a61461037d578063fad8b32a1461039b5761011f565b80636d70f7ae1461025d57806391d148541461028d578063a217fddf146102bd578063aa271e1a146102db578063cfbd48851461030b5761011f565b8063261707fa116100f2578063261707fa146101bb578063282c51f3146101d75780632f2ff15d146101f557806336568abe146102115780634334614a1461022d5761011f565b806301ffc9a7146101235780630900cc331461015357806310511f961461016f578063248a9ca31461018b575b5f80fd5b61013d60048036038101906101389190610ad2565b6103b7565b60405161014a9190610b17565b60405180910390f35b61016d60048036038101906101689190610b8a565b610430565b005b61018960048036038101906101849190610b8a565b61046a565b005b6101a560048036038101906101a09190610be8565b6104a4565b6040516101b29190610c22565b60405180910390f35b6101d560048036038101906101d09190610b8a565b6104c0565b005b6101df6104fa565b6040516101ec9190610c22565b60405180910390f35b61020f600480360381019061020a9190610c3b565b61051e565b005b61022b60048036038101906102269190610c3b565b610540565b005b61024760048036038101906102429190610b8a565b6105bb565b6040516102549190610b17565b60405180910390f35b61027760048036038101906102729190610b8a565b6105ed565b6040516102849190610b17565b60405180910390f35b6102a760048036038101906102a29190610c3b565b61061f565b6040516102b49190610b17565b60405180910390f35b6102c5610682565b6040516102d29190610c22565b60405180910390f35b6102f560048036038101906102f09190610b8a565b610688565b6040516103029190610b17565b60405180910390f35b61032560048036038101906103209190610b8a565b6106ba565b005b61032f6106f4565b60405161033c9190610c22565b60405180910390f35b61035f600480360381019061035a9190610c3b565b610718565b005b61037b60048036038101906103769190610b8a565b61073a565b005b610385610774565b6040516103929190610c22565b60405180910390f35b6103b560048036038101906103b09190610b8a565b610798565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104295750610428826107d2565b5b9050919050565b5f801b61043c8161083b565b6104667f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84883610718565b5050565b5f801b6104768161083b565b6104a07f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488361051e565b5050565b5f805f8381526020019081526020015f20600101549050919050565b5f801b6104cc8161083b565b6104f67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361051e565b5050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610527826104a4565b6105308161083b565b61053a838361084f565b50505050565b610548610938565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b6828261093f565b505050565b5f6105e67f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488361061f565b9050919050565b5f6106187f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298361061f565b9050919050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f6106b37f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361061f565b9050919050565b5f801b6106c68161083b565b6106f07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683610718565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610721826104a4565b61072a8161083b565b610734838361093f565b50505050565b5f801b6107468161083b565b6107707f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298361051e565b5050565b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b5f801b6107a48161083b565b6107ce7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92983610718565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61084c81610847610938565b610a28565b50565b5f61085a838361061f565b61092e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108cb610938565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610932565b5f90505b92915050565b5f33905090565b5f61094a838361061f565b15610a1e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109bb610938565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610a22565b5f90505b92915050565b610a32828261061f565b610a755780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a6c929190610c88565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ab181610a7d565b8114610abb575f80fd5b50565b5f81359050610acc81610aa8565b92915050565b5f60208284031215610ae757610ae6610a79565b5b5f610af484828501610abe565b91505092915050565b5f8115159050919050565b610b1181610afd565b82525050565b5f602082019050610b2a5f830184610b08565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5982610b30565b9050919050565b610b6981610b4f565b8114610b73575f80fd5b50565b5f81359050610b8481610b60565b92915050565b5f60208284031215610b9f57610b9e610a79565b5b5f610bac84828501610b76565b91505092915050565b5f819050919050565b610bc781610bb5565b8114610bd1575f80fd5b50565b5f81359050610be281610bbe565b92915050565b5f60208284031215610bfd57610bfc610a79565b5b5f610c0a84828501610bd4565b91505092915050565b610c1c81610bb5565b82525050565b5f602082019050610c355f830184610c13565b92915050565b5f8060408385031215610c5157610c50610a79565b5b5f610c5e85828601610bd4565b9250506020610c6f85828601610b76565b9150509250929050565b610c8281610b4f565b82525050565b5f604082019050610c9b5f830185610c79565b610ca86020830184610c13565b939250505056fea2646970667358221220aaad3f4df7667f341036437386d4e143c7fc8a68e48ca82c07bdb48a7ac56fe764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFB7 CODESIZE SUB DUP1 PUSH2 0xFB7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x29A JUMP JUMPDEST PUSH2 0x43 PUSH0 DUP1 SHL DUP3 PUSH2 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x74 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH2 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xA5 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP3 PUSH2 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xD6 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP3 PUSH2 0xDD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x2C5 JUMP JUMPDEST PUSH0 PUSH2 0xEE DUP4 DUP4 PUSH2 0x1D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C8 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x165 PUSH2 0x235 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1CC JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x269 DUP3 PUSH2 0x240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x25F JUMP JUMPDEST DUP2 EQ PUSH2 0x283 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x294 DUP2 PUSH2 0x270 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BC DUP5 DUP3 DUP6 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE5 DUP1 PUSH2 0x2D2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D70F7AE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE348DA13 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x39B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xCFBD4885 EQ PUSH2 0x30B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x261707FA GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x261707FA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x4334614A EQ PUSH2 0x22D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x900CC33 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x10511F96 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x429 JUMPI POP PUSH2 0x428 DUP3 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x43C DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x466 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x476 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4A0 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x4CC DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4F6 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x527 DUP3 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x530 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x53A DUP4 DUP4 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B6 DUP3 DUP3 PUSH2 0x93F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E6 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x618 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6B3 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x6C6 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x6F0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x721 DUP3 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x734 DUP4 DUP4 PUSH2 0x93F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x746 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x770 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x7A4 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x7CE PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP2 PUSH2 0x847 PUSH2 0x938 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x85A DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x92E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8CB PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x932 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x94A DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST ISZERO PUSH2 0xA1E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9BB PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xA22 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA32 DUP3 DUP3 PUSH2 0x61F JUMP JUMPDEST PUSH2 0xA75 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP3 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xABB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xACC DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE7 JUMPI PUSH2 0xAE6 PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF4 DUP5 DUP3 DUP6 ADD PUSH2 0xABE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB11 DUP2 PUSH2 0xAFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2A PUSH0 DUP4 ADD DUP5 PUSH2 0xB08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP2 EQ PUSH2 0xB73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAC DUP5 DUP3 DUP6 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC7 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE2 DUP2 PUSH2 0xBBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0A DUP5 DUP3 DUP6 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC35 PUSH0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5E DUP6 DUP3 DUP7 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9B PUSH0 DUP4 ADD DUP6 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xCA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xAD EXTCODEHASH 0x4D 0xF7 PUSH7 0x7F341036437386 0xD4 0xE1 NUMBER 0xC7 0xFC DUP11 PUSH9 0xE48CA82C07BDB48A7A 0xC5 PUSH16 0xE764736F6C6343000819003300000000 ",
							"sourceMap": "243:1675:9:-:0;;;504:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;542:37;2232:4:0;553:18:9;;573:5;542:10;;;:37;;:::i;:::-;;590:30;329:24;614:5;590:10;;;:30;;:::i;:::-;;631;398:24;655:5;631:10;;;:30;;:::i;:::-;;672:32;469:26;698:5;672:10;;;:32;;:::i;:::-;;504:208;243:1675;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;243:1675:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1216": {
									"entryPoint": 1274,
									"id": 1216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1666,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1211": {
									"entryPoint": 1780,
									"id": 1211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OPERATOR_ROLE_1221": {
									"entryPoint": 1908,
									"id": 1221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2600,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2107,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2127,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": 2360,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2367,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1188,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantBurner_1289": {
									"entryPoint": 1130,
									"id": 1289,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantMinter_1261": {
									"entryPoint": 1216,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantOperator_1317": {
									"entryPoint": 1850,
									"id": 1317,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_147": {
									"entryPoint": 1310,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1567,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isBurner_1357": {
									"entryPoint": 1467,
									"id": 1357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isMinter_1344": {
									"entryPoint": 1672,
									"id": 1344,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isOperator_1370": {
									"entryPoint": 1517,
									"id": 1370,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1344,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeBurner_1303": {
									"entryPoint": 1072,
									"id": 1303,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeMinter_1275": {
									"entryPoint": 1722,
									"id": 1275,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeOperator_1331": {
									"entryPoint": 1944,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1816,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1187": {
									"entryPoint": 2002,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 951,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4342:11",
										"nodeType": "YulBlock",
										"src": "0:4342:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1563:81:11",
													"nodeType": "YulBlock",
													"src": "1563:81:11",
													"statements": [
														{
															"nativeSrc": "1573:65:11",
															"nodeType": "YulAssignment",
															"src": "1573:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:11"
																},
																"nativeSrc": "1584:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:11",
														"nodeType": "YulTypedName",
														"src": "1545:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:11",
														"nodeType": "YulTypedName",
														"src": "1555:7:11",
														"type": ""
													}
												],
												"src": "1518:126:11"
											},
											{
												"body": {
													"nativeSrc": "1695:51:11",
													"nodeType": "YulBlock",
													"src": "1695:51:11",
													"statements": [
														{
															"nativeSrc": "1705:35:11",
															"nodeType": "YulAssignment",
															"src": "1705:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:11"
																},
																"nativeSrc": "1716:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:11",
														"nodeType": "YulTypedName",
														"src": "1677:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:11",
														"nodeType": "YulTypedName",
														"src": "1687:7:11",
														"type": ""
													}
												],
												"src": "1650:96:11"
											},
											{
												"body": {
													"nativeSrc": "1795:79:11",
													"nodeType": "YulBlock",
													"src": "1795:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:11",
																"nodeType": "YulBlock",
																"src": "1852:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:11"
																			},
																			"nativeSrc": "1854:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:11"
																		},
																		"nativeSrc": "1854:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:11"
																				},
																				"nativeSrc": "1825:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:11"
																		},
																		"nativeSrc": "1815:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:11"
																},
																"nativeSrc": "1808:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:11"
															},
															"nativeSrc": "1805:63:11",
															"nodeType": "YulIf",
															"src": "1805:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:11",
														"nodeType": "YulTypedName",
														"src": "1788:5:11",
														"type": ""
													}
												],
												"src": "1752:122:11"
											},
											{
												"body": {
													"nativeSrc": "1932:87:11",
													"nodeType": "YulBlock",
													"src": "1932:87:11",
													"statements": [
														{
															"nativeSrc": "1942:29:11",
															"nodeType": "YulAssignment",
															"src": "1942:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:11"
																},
																"nativeSrc": "1951:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:11"
																},
																"nativeSrc": "1980:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:11"
															},
															"nativeSrc": "1980:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:11",
														"nodeType": "YulTypedName",
														"src": "1910:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:11",
														"nodeType": "YulTypedName",
														"src": "1918:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:11",
														"nodeType": "YulTypedName",
														"src": "1926:5:11",
														"type": ""
													}
												],
												"src": "1880:139:11"
											},
											{
												"body": {
													"nativeSrc": "2091:263:11",
													"nodeType": "YulBlock",
													"src": "2091:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:11",
																"nodeType": "YulBlock",
																"src": "2137:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:11"
																			},
																			"nativeSrc": "2139:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:11"
																		},
																		"nativeSrc": "2139:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:11"
																		},
																		"nativeSrc": "2108:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:11"
																},
																"nativeSrc": "2104:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:11"
															},
															"nativeSrc": "2101:119:11",
															"nodeType": "YulIf",
															"src": "2101:119:11"
														},
														{
															"nativeSrc": "2230:117:11",
															"nodeType": "YulBlock",
															"src": "2230:117:11",
															"statements": [
																{
																	"nativeSrc": "2245:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:11"
																				},
																				"nativeSrc": "2305:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:11"
																		},
																		"nativeSrc": "2284:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:11",
														"nodeType": "YulTypedName",
														"src": "2061:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:11",
														"nodeType": "YulTypedName",
														"src": "2072:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:11",
														"nodeType": "YulTypedName",
														"src": "2084:6:11",
														"type": ""
													}
												],
												"src": "2025:329:11"
											},
											{
												"body": {
													"nativeSrc": "2405:32:11",
													"nodeType": "YulBlock",
													"src": "2405:32:11",
													"statements": [
														{
															"nativeSrc": "2415:16:11",
															"nodeType": "YulAssignment",
															"src": "2415:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:11",
																"nodeType": "YulIdentifier",
																"src": "2426:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2360:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:11",
														"nodeType": "YulTypedName",
														"src": "2387:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:11",
														"nodeType": "YulTypedName",
														"src": "2397:7:11",
														"type": ""
													}
												],
												"src": "2360:77:11"
											},
											{
												"body": {
													"nativeSrc": "2486:79:11",
													"nodeType": "YulBlock",
													"src": "2486:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2543:16:11",
																"nodeType": "YulBlock",
																"src": "2543:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2545:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:11"
																			},
																			"nativeSrc": "2545:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:11"
																		},
																		"nativeSrc": "2545:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2509:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2534:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2516:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:11"
																				},
																				"nativeSrc": "2516:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2506:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:11"
																		},
																		"nativeSrc": "2506:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2499:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:11"
																},
																"nativeSrc": "2499:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2499:43:11"
															},
															"nativeSrc": "2496:63:11",
															"nodeType": "YulIf",
															"src": "2496:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2443:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2479:5:11",
														"nodeType": "YulTypedName",
														"src": "2479:5:11",
														"type": ""
													}
												],
												"src": "2443:122:11"
											},
											{
												"body": {
													"nativeSrc": "2623:87:11",
													"nodeType": "YulBlock",
													"src": "2623:87:11",
													"statements": [
														{
															"nativeSrc": "2633:29:11",
															"nodeType": "YulAssignment",
															"src": "2633:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2655:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2642:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:11"
																},
																"nativeSrc": "2642:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2642:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2633:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2698:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2671:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:11"
																},
																"nativeSrc": "2671:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2671:33:11"
															},
															"nativeSrc": "2671:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2571:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2601:6:11",
														"nodeType": "YulTypedName",
														"src": "2601:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2609:3:11",
														"nodeType": "YulTypedName",
														"src": "2609:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2617:5:11",
														"nodeType": "YulTypedName",
														"src": "2617:5:11",
														"type": ""
													}
												],
												"src": "2571:139:11"
											},
											{
												"body": {
													"nativeSrc": "2782:263:11",
													"nodeType": "YulBlock",
													"src": "2782:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2828:83:11",
																"nodeType": "YulBlock",
																"src": "2828:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2830:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:11"
																			},
																			"nativeSrc": "2830:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:11"
																		},
																		"nativeSrc": "2830:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2803:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2812:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2799:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:11"
																		},
																		"nativeSrc": "2799:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2795:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:11"
																},
																"nativeSrc": "2795:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2795:32:11"
															},
															"nativeSrc": "2792:119:11",
															"nodeType": "YulIf",
															"src": "2792:119:11"
														},
														{
															"nativeSrc": "2921:117:11",
															"nodeType": "YulBlock",
															"src": "2921:117:11",
															"statements": [
																{
																	"nativeSrc": "2936:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2936:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2950:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2940:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2940:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:11"
																				},
																				"nativeSrc": "2996:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2975:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:11"
																		},
																		"nativeSrc": "2975:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2965:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2716:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2752:9:11",
														"nodeType": "YulTypedName",
														"src": "2752:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2763:7:11",
														"nodeType": "YulTypedName",
														"src": "2763:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2775:6:11",
														"nodeType": "YulTypedName",
														"src": "2775:6:11",
														"type": ""
													}
												],
												"src": "2716:329:11"
											},
											{
												"body": {
													"nativeSrc": "3116:53:11",
													"nodeType": "YulBlock",
													"src": "3116:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3133:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3133:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3156:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3156:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3138:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3138:17:11"
																		},
																		"nativeSrc": "3138:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3126:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3126:6:11"
																},
																"nativeSrc": "3126:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3126:37:11"
															},
															"nativeSrc": "3126:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3126:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3051:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3104:5:11",
														"nodeType": "YulTypedName",
														"src": "3104:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3111:3:11",
														"nodeType": "YulTypedName",
														"src": "3111:3:11",
														"type": ""
													}
												],
												"src": "3051:118:11"
											},
											{
												"body": {
													"nativeSrc": "3273:124:11",
													"nodeType": "YulBlock",
													"src": "3273:124:11",
													"statements": [
														{
															"nativeSrc": "3283:26:11",
															"nodeType": "YulAssignment",
															"src": "3283:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3295:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3295:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3306:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3291:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3291:3:11"
																},
																"nativeSrc": "3291:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3291:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3283:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3283:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3363:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3363:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3376:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3387:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3372:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:11"
																		},
																		"nativeSrc": "3372:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3372:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3319:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3319:43:11"
																},
																"nativeSrc": "3319:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3319:71:11"
															},
															"nativeSrc": "3319:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3319:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3175:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3245:9:11",
														"nodeType": "YulTypedName",
														"src": "3245:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3257:6:11",
														"nodeType": "YulTypedName",
														"src": "3257:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3268:4:11",
														"nodeType": "YulTypedName",
														"src": "3268:4:11",
														"type": ""
													}
												],
												"src": "3175:222:11"
											},
											{
												"body": {
													"nativeSrc": "3486:391:11",
													"nodeType": "YulBlock",
													"src": "3486:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3532:83:11",
																"nodeType": "YulBlock",
																"src": "3532:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3534:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3534:77:11"
																			},
																			"nativeSrc": "3534:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3534:79:11"
																		},
																		"nativeSrc": "3534:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3534:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3507:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3516:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:11"
																		},
																		"nativeSrc": "3503:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3499:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3499:3:11"
																},
																"nativeSrc": "3499:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3499:32:11"
															},
															"nativeSrc": "3496:119:11",
															"nodeType": "YulIf",
															"src": "3496:119:11"
														},
														{
															"nativeSrc": "3625:117:11",
															"nodeType": "YulBlock",
															"src": "3625:117:11",
															"statements": [
																{
																	"nativeSrc": "3640:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3640:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3654:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3654:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3644:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3644:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3669:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3669:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3704:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3704:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3715:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3715:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3700:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3700:3:11"
																				},
																				"nativeSrc": "3700:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3700:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3724:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3724:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3679:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3679:20:11"
																		},
																		"nativeSrc": "3679:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3679:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3669:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3752:118:11",
															"nodeType": "YulBlock",
															"src": "3752:118:11",
															"statements": [
																{
																	"nativeSrc": "3767:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3767:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3781:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3771:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3771:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:11"
																				},
																				"nativeSrc": "3828:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:11"
																		},
																		"nativeSrc": "3807:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3797:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3403:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3448:9:11",
														"nodeType": "YulTypedName",
														"src": "3448:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3459:7:11",
														"nodeType": "YulTypedName",
														"src": "3459:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3471:6:11",
														"nodeType": "YulTypedName",
														"src": "3471:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3479:6:11",
														"nodeType": "YulTypedName",
														"src": "3479:6:11",
														"type": ""
													}
												],
												"src": "3403:474:11"
											},
											{
												"body": {
													"nativeSrc": "3948:53:11",
													"nodeType": "YulBlock",
													"src": "3948:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3965:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3965:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3988:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3988:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3970:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3970:17:11"
																		},
																		"nativeSrc": "3970:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3970:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3958:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3958:6:11"
																},
																"nativeSrc": "3958:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3958:37:11"
															},
															"nativeSrc": "3958:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3958:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3883:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3936:5:11",
														"nodeType": "YulTypedName",
														"src": "3936:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3943:3:11",
														"nodeType": "YulTypedName",
														"src": "3943:3:11",
														"type": ""
													}
												],
												"src": "3883:118:11"
											},
											{
												"body": {
													"nativeSrc": "4133:206:11",
													"nodeType": "YulBlock",
													"src": "4133:206:11",
													"statements": [
														{
															"nativeSrc": "4143:26:11",
															"nodeType": "YulAssignment",
															"src": "4143:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4155:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4155:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4166:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4151:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:11"
																},
																"nativeSrc": "4151:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4151:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4143:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4223:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4223:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4236:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4236:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4247:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4247:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4232:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:11"
																		},
																		"nativeSrc": "4232:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4232:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4179:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4179:43:11"
																},
																"nativeSrc": "4179:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4179:71:11"
															},
															"nativeSrc": "4179:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4179:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4317:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4328:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4313:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:11"
																		},
																		"nativeSrc": "4313:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4260:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4260:43:11"
																},
																"nativeSrc": "4260:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4260:72:11"
															},
															"nativeSrc": "4260:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4260:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "4007:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:11",
														"nodeType": "YulTypedName",
														"src": "4097:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4109:6:11",
														"nodeType": "YulTypedName",
														"src": "4109:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4117:6:11",
														"nodeType": "YulTypedName",
														"src": "4117:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4128:4:11",
														"nodeType": "YulTypedName",
														"src": "4128:4:11",
														"type": ""
													}
												],
												"src": "4007:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80636d70f7ae116100ab578063d53913931161006f578063d539139314610327578063d547741f14610345578063e348da1314610361578063f5b541a61461037d578063fad8b32a1461039b5761011f565b80636d70f7ae1461025d57806391d148541461028d578063a217fddf146102bd578063aa271e1a146102db578063cfbd48851461030b5761011f565b8063261707fa116100f2578063261707fa146101bb578063282c51f3146101d75780632f2ff15d146101f557806336568abe146102115780634334614a1461022d5761011f565b806301ffc9a7146101235780630900cc331461015357806310511f961461016f578063248a9ca31461018b575b5f80fd5b61013d60048036038101906101389190610ad2565b6103b7565b60405161014a9190610b17565b60405180910390f35b61016d60048036038101906101689190610b8a565b610430565b005b61018960048036038101906101849190610b8a565b61046a565b005b6101a560048036038101906101a09190610be8565b6104a4565b6040516101b29190610c22565b60405180910390f35b6101d560048036038101906101d09190610b8a565b6104c0565b005b6101df6104fa565b6040516101ec9190610c22565b60405180910390f35b61020f600480360381019061020a9190610c3b565b61051e565b005b61022b60048036038101906102269190610c3b565b610540565b005b61024760048036038101906102429190610b8a565b6105bb565b6040516102549190610b17565b60405180910390f35b61027760048036038101906102729190610b8a565b6105ed565b6040516102849190610b17565b60405180910390f35b6102a760048036038101906102a29190610c3b565b61061f565b6040516102b49190610b17565b60405180910390f35b6102c5610682565b6040516102d29190610c22565b60405180910390f35b6102f560048036038101906102f09190610b8a565b610688565b6040516103029190610b17565b60405180910390f35b61032560048036038101906103209190610b8a565b6106ba565b005b61032f6106f4565b60405161033c9190610c22565b60405180910390f35b61035f600480360381019061035a9190610c3b565b610718565b005b61037b60048036038101906103769190610b8a565b61073a565b005b610385610774565b6040516103929190610c22565b60405180910390f35b6103b560048036038101906103b09190610b8a565b610798565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104295750610428826107d2565b5b9050919050565b5f801b61043c8161083b565b6104667f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84883610718565b5050565b5f801b6104768161083b565b6104a07f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488361051e565b5050565b5f805f8381526020019081526020015f20600101549050919050565b5f801b6104cc8161083b565b6104f67f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361051e565b5050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b610527826104a4565b6105308161083b565b61053a838361084f565b50505050565b610548610938565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ac576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105b6828261093f565b505050565b5f6105e67f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488361061f565b9050919050565b5f6106187f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298361061f565b9050919050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f6106b37f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68361061f565b9050919050565b5f801b6106c68161083b565b6106f07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683610718565b5050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610721826104a4565b61072a8161083b565b610734838361093f565b50505050565b5f801b6107468161083b565b6107707f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b9298361051e565b5050565b7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92981565b5f801b6107a48161083b565b6107ce7f97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b92983610718565b5050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61084c81610847610938565b610a28565b50565b5f61085a838361061f565b61092e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506108cb610938565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610932565b5f90505b92915050565b5f33905090565b5f61094a838361061f565b15610a1e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506109bb610938565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610a22565b5f90505b92915050565b610a32828261061f565b610a755780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a6c929190610c88565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ab181610a7d565b8114610abb575f80fd5b50565b5f81359050610acc81610aa8565b92915050565b5f60208284031215610ae757610ae6610a79565b5b5f610af484828501610abe565b91505092915050565b5f8115159050919050565b610b1181610afd565b82525050565b5f602082019050610b2a5f830184610b08565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5982610b30565b9050919050565b610b6981610b4f565b8114610b73575f80fd5b50565b5f81359050610b8481610b60565b92915050565b5f60208284031215610b9f57610b9e610a79565b5b5f610bac84828501610b76565b91505092915050565b5f819050919050565b610bc781610bb5565b8114610bd1575f80fd5b50565b5f81359050610be281610bbe565b92915050565b5f60208284031215610bfd57610bfc610a79565b5b5f610c0a84828501610bd4565b91505092915050565b610c1c81610bb5565b82525050565b5f602082019050610c355f830184610c13565b92915050565b5f8060408385031215610c5157610c50610a79565b5b5f610c5e85828601610bd4565b9250506020610c6f85828601610b76565b9150509250929050565b610c8281610b4f565b82525050565b5f604082019050610c9b5f830185610c79565b610ca86020830184610c13565b939250505056fea2646970667358221220aaad3f4df7667f341036437386d4e143c7fc8a68e48ca82c07bdb48a7ac56fe764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D70F7AE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xE348DA13 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF5B541A6 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x39B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xCFBD4885 EQ PUSH2 0x30B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x261707FA GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x261707FA EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x4334614A EQ PUSH2 0x22D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x900CC33 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x10511F96 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xBE8 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32F PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xC3B JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x385 PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x392 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x429 JUMPI POP PUSH2 0x428 DUP3 PUSH2 0x7D2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x43C DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x466 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x476 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4A0 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x4CC DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4F6 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x527 DUP3 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x530 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x53A DUP4 DUP4 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B6 DUP3 DUP3 PUSH2 0x93F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E6 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x618 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x6B3 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x61F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x6C6 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x6F0 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x721 DUP3 PUSH2 0x4A4 JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x734 DUP4 DUP4 PUSH2 0x93F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x746 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x770 PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x51E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x7A4 DUP2 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x7CE PUSH32 0x97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929 DUP4 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP2 PUSH2 0x847 PUSH2 0x938 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x85A DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST PUSH2 0x92E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8CB PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x932 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x94A DUP4 DUP4 PUSH2 0x61F JUMP JUMPDEST ISZERO PUSH2 0xA1E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x9BB PUSH2 0x938 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xA22 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA32 DUP3 DUP3 PUSH2 0x61F JUMP JUMPDEST PUSH2 0xA75 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP3 SWAP2 SWAP1 PUSH2 0xC88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xA7D JUMP JUMPDEST DUP2 EQ PUSH2 0xABB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xACC DUP2 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE7 JUMPI PUSH2 0xAE6 PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF4 DUP5 DUP3 DUP6 ADD PUSH2 0xABE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB11 DUP2 PUSH2 0xAFD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2A PUSH0 DUP4 ADD DUP5 PUSH2 0xB08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB59 DUP3 PUSH2 0xB30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB69 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP2 EQ PUSH2 0xB73 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB84 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9F JUMPI PUSH2 0xB9E PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAC DUP5 DUP3 DUP6 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC7 DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE2 DUP2 PUSH2 0xBBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC0A DUP5 DUP3 DUP6 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xBB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC35 PUSH0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xA79 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC5E DUP6 DUP3 DUP7 ADD PUSH2 0xBD4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC6F DUP6 DUP3 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC9B PUSH0 DUP4 ADD DUP6 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0xCA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xAD EXTCODEHASH 0x4D 0xF7 PUSH7 0x7F341036437386 0xD4 0xE1 NUMBER 0xC7 0xFC DUP11 PUSH9 0xE48CA82C07BDB48A7A 0xC5 PUSH16 0xE764736F6C6343000819003300000000 ",
							"sourceMap": "243:1675:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1124:128:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;990:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;720:126:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;360:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1665:119:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1792:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1538:119:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;854:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;291:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1260:130:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;429:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1124:128:9:-;2232:4:0;1181:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;1212:32:9::1;398:24;1236:7;1212:10;:32::i;:::-;1124:128:::0;;:::o;990:126::-;2232:4:0;1046:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;1077:31:9::1;398:24;1100:7;1077:9;:31::i;:::-;990:126:::0;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;720:126:9:-;2232:4:0;776:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;807:31:9::1;329:24;830:7;807:9;:31::i;:::-;720:126:::0;;:::o;360:62::-;398:24;360:62;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1665:119:9:-;1723:4;1747:29;398:24;1768:7;1747;:29::i;:::-;1740:36;;1665:119;;;:::o;1792:123::-;1852:4;1876:31;469:26;1899:7;1876;:31::i;:::-;1869:38;;1792:123;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;1538:119:9:-;1596:4;1620:29;329:24;1641:7;1620;:29::i;:::-;1613:36;;1538:119;;;:::o;854:128::-;2232:4:0;911:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;942:32:9::1;329:24;966:7;942:10;:32::i;:::-;854:128:::0;;:::o;291:62::-;329:24;291:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1260:130:9:-;2232:4:0;1318:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;1349:33:9::1;469:26;1374:7;1349:9;:33::i;:::-;1260:130:::0;;:::o;429:66::-;469:26;429:66;:::o;1398:132::-;2232:4:0;1457:18:9;;2464:16:0;2475:4;2464:10;:16::i;:::-;1488:34:9::1;469:26;1514:7;1488:10;:34::i;:::-;1398:132:::0;;:::o;763:146:7:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:329::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:118::-;3138:24;3156:5;3138:24;:::i;:::-;3133:3;3126:37;3051:118;;:::o;3175:222::-;3268:4;3306:2;3295:9;3291:18;3283:26;;3319:71;3387:1;3376:9;3372:17;3363:6;3319:71;:::i;:::-;3175:222;;;;:::o;3403:474::-;3471:6;3479;3528:2;3516:9;3507:7;3503:23;3499:32;3496:119;;;3534:79;;:::i;:::-;3496:119;3654:1;3679:53;3724:7;3715:6;3704:9;3700:22;3679:53;:::i;:::-;3669:63;;3625:117;3781:2;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3752:118;3403:474;;;;;:::o;3883:118::-;3970:24;3988:5;3970:24;:::i;:::-;3965:3;3958:37;3883:118;;:::o;4007:332::-;4128:4;4166:2;4155:9;4151:18;4143:26;;4179:71;4247:1;4236:9;4232:17;4223:6;4179:71;:::i;:::-;4260:72;4328:2;4317:9;4313:18;4304:6;4260:72;:::i;:::-;4007:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "660200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "397",
								"MINTER_ROLE()": "347",
								"OPERATOR_ROLE()": "413",
								"getRoleAdmin(bytes32)": "infinite",
								"grantBurner(address)": "infinite",
								"grantMinter(address)": "infinite",
								"grantOperator(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"isBurner(address)": "3109",
								"isMinter(address)": "3087",
								"isOperator(address)": "3021",
								"renounceRole(bytes32,address)": "infinite",
								"revokeBurner(address)": "infinite",
								"revokeMinter(address)": "infinite",
								"revokeOperator(address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 504,
									"end": 712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 504,
									"end": 712,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 542,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 571,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 553,
									"end": 571,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 573,
									"end": 578,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 542,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 542,
									"end": 552,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 542,
									"end": 552,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 542,
									"end": 579,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 542,
									"end": 579,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 542,
									"end": 579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 542,
									"end": 579,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 542,
									"end": 579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 542,
									"end": 579,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 590,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 329,
									"end": 353,
									"name": "PUSH",
									"source": 9,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 614,
									"end": 619,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 590,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 590,
									"end": 600,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 600,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 590,
									"end": 620,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 590,
									"end": 620,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 590,
									"end": 620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 590,
									"end": 620,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 590,
									"end": 620,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 590,
									"end": 620,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 631,
									"end": 661,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 398,
									"end": 422,
									"name": "PUSH",
									"source": 9,
									"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
								},
								{
									"begin": 655,
									"end": 660,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 631,
									"end": 641,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 631,
									"end": 661,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 631,
									"end": 661,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 631,
									"end": 661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 631,
									"end": 661,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 631,
									"end": 661,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 631,
									"end": 661,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 672,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 469,
									"end": 495,
									"name": "PUSH",
									"source": 9,
									"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
								},
								{
									"begin": 698,
									"end": 703,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 672,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 672,
									"end": 682,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 672,
									"end": 704,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 672,
									"end": 704,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 672,
									"end": 704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 672,
									"end": 704,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 672,
									"end": 704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 672,
									"end": 704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 504,
									"end": 712,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1918,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aaad3f4df7667f341036437386d4e143c7fc8a68e48ca82c07bdb48a7ac56fe764736f6c63430008190033",
									".code": [
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "6D70F7AE"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "D5391393"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "D5391393"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "E348DA13"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "F5B541A6"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "FAD8B32A"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "6D70F7AE"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "AA271E1A"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "CFBD4885"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "261707FA"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "261707FA"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "282C51F3"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "4334614A"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "900CC33"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "10511F96"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 1918,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1124,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1124,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 990,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 990,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 720,
											"end": 846,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 720,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 720,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 360,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 360,
											"end": 422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1665,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1665,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1665,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1792,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1792,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1792,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1538,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1538,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1538,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 854,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 854,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 291,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1260,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1260,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 429,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1398,
											"end": 1530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1398,
											"end": 1530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1199,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1199,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 398,
											"end": 422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1236,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1212,
											"end": 1244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1212,
											"end": 1244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1124,
											"end": 1252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 398,
											"end": 422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1100,
											"end": 1107,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1077,
											"end": 1108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1077,
											"end": 1108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 846,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 720,
											"end": 846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 794,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 776,
											"end": 794,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 807,
											"end": 838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 329,
											"end": 353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 830,
											"end": 837,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 807,
											"end": 816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 807,
											"end": 838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 807,
											"end": 838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 720,
											"end": 846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 360,
											"end": 422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 360,
											"end": 422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 398,
											"end": 422,
											"name": "PUSH",
											"source": 9,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1747,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1776,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1747,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1852,
											"end": 1856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1876,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1907,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1596,
											"end": 1600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 9,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1641,
											"end": 1648,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1620,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1613,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 854,
											"end": 982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 911,
											"end": 929,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 942,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 329,
											"end": 353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 966,
											"end": 973,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 942,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 942,
											"end": 974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 942,
											"end": 974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 942,
											"end": 974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 854,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 329,
											"end": 353,
											"name": "PUSH",
											"source": 9,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 291,
											"end": 353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 469,
											"end": 495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 1374,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1349,
											"end": 1382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1349,
											"end": 1382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1349,
											"end": 1382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 495,
											"name": "PUSH",
											"source": 9,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 429,
											"end": 495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1457,
											"end": 1475,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1488,
											"end": 1522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 469,
											"end": 495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "97667070C54EF182B0F5858B034BEAC1B6F3089AA2D3188BB1E8929F4FA9B929"
										},
										{
											"begin": 1514,
											"end": 1521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1488,
											"end": 1522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1488,
											"end": 1522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1398,
											"end": 1530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6851,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6830,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6830,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6896,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6951,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6951,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6942,
											"end": 6949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6936,
											"end": 6940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 3038,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3138,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3372,
											"end": 3389,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 3319,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3503,
											"end": 3526,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 3534,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 3679,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3625,
											"end": 3742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3403,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3970,
											"end": 3994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3970,
											"end": 3994,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3970,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 3968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3958,
											"end": 3995,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4151,
											"end": 4169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4143,
											"end": 4169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4247,
											"end": 4248,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4245,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4232,
											"end": 4249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 4179,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4179,
											"end": 4250,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4179,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 4260,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4260,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4007,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TokenAuthority.sol",
								"dJOB.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"OPERATOR_ROLE()": "f5b541a6",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantBurner(address)": "10511f96",
							"grantMinter(address)": "261707fa",
							"grantOperator(address)": "e348da13",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isBurner(address)": "4334614a",
							"isMinter(address)": "aa271e1a",
							"isOperator(address)": "6d70f7ae",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeBurner(address)": "0900cc33",
							"revokeMinter(address)": "cfbd4885",
							"revokeOperator(address)": "fad8b32a",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages roles and access rights for the dJOB token and platform contracts.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"TokenAuthority\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenAuthority.sol\":\"TokenAuthority\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"TokenAuthority.sol\":{\"keccak256\":\"0x452a1cb09e511294f419b9fa1d9b21a805bb979280aa06d8b6885df9d334472e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff27966416f5f6541f709fa7f98206bb9b5f34f4a1b1c188ace780a37e69d88\",\"dweb:/ipfs/QmUAeRe88NAQygPkpWKRGssVBwLvp46ukcUmJmJymMGKtd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "TokenAuthority.sol:TokenAuthority",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "TokenAuthority.sol:TokenAuthority",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "TokenAuthority.sol:TokenAuthority",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"dJOB.sol": {
				"dJOB": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_authority",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract TokenAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"dJOB.sol\":152:746  contract dJOB is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"dJOB.sol\":222:397  constructor(address _authority) ERC20(\"dJOB\", \"dJOB\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x644a4f4200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x644a4f4200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"dJOB.sol\":314:324  _authority */\n  dup1\n    /* \"dJOB.sol\":287:296  authority */\n  0x05\n  0x00\n    /* \"dJOB.sol\":287:325  authority = TokenAuthority(_authority) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"dJOB.sol\":336:373  _mint(msg.sender, 1000000 * 10 ** 18) */\n  tag_11\n    /* \"dJOB.sol\":342:352  msg.sender */\n  caller\n    /* \"dJOB.sol\":354:372  1000000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"dJOB.sol\":336:341  _mint */\n  shl(0x20, tag_12)\n    /* \"dJOB.sol\":336:373  _mint(msg.sender, 1000000 * 10 ** 18) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"dJOB.sol\":222:397  constructor(address _authority) ERC20(\"dJOB\", \"dJOB\") {... */\n  pop\n    /* \"dJOB.sol\":152:746  contract dJOB is ERC20 {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_36:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_68\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_37:\n    /* \"#utility.yul\":641:665   */\n  tag_70\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_36\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_71:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_38:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_73\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_37\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_76\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":932:1051   */\ntag_75:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_77\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_39:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_40:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_41:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_42:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_82:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_84\n  tag_41\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1909:1993   */\ntag_83:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_43:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_44:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_45:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_46:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_89\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_45\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2624:2663   */\n  tag_90\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_45\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_47:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_48:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_49:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_94\n    /* \"#utility.yul\":3013:3047   */\n  tag_95\n    /* \"#utility.yul\":3022:3046   */\n  tag_96\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3013:3047   */\n  tag_48\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2995:3048   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_50:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_51:\n    /* \"#utility.yul\":3251:3290   */\n  tag_99\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3312:3403   */\n  tag_100\n    /* \"#utility.yul\":3361:3402   */\n  tag_101\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_50\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_46\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_52:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_53:\n    /* \"#utility.yul\":3572:3604   */\n  tag_104\n  tag_52\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3613:3678   */\n  tag_105\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_51\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_54:\n    /* \"#utility.yul\":3750:3870   */\ntag_107:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_110\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_53\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_107)\ntag_109:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_55:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_113\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_43\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4101:4130   */\n  tag_114\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_44\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_115:\n    /* \"#utility.yul\":4328:4408   */\n  tag_116\n    /* \"#utility.yul\":4384:4406   */\n  tag_117\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_44\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_54\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_112:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_56:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_57:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_120\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_56\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_58:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_122\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_57\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_8:\n    /* \"#utility.yul\":5145:5182   */\n  tag_124\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_39\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_126\n  tag_40\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5233:5289   */\ntag_125:\n    /* \"#utility.yul\":5313:5351   */\n  tag_127\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_42\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5398:5465   */\n  tag_128\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_55\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_131:\n    /* \"#utility.yul\":6339:6406   */\n  tag_132\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_58\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_129)\n    /* \"#utility.yul\":5560:6178   */\ntag_130:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_133\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_43\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_134:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_134)\ntag_136:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_138\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_137:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_129:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_59:\n    /* \"#utility.yul\":6516:6540   */\n  tag_140\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_36\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_17:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_142\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_59\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_60:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_23:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_145\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_47\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_146\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_47\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_148\n  tag_60\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7115:7151   */\ntag_147:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_61:\n    /* \"#utility.yul\":7251:7275   */\n  tag_150\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_47\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_27:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_152\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7569:7641   */\n  tag_153\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_61\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7651:7723   */\n  tag_154\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_31:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_156\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_61\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"dJOB.sol\":152:746  contract dJOB is ERC20 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"dJOB.sol\":152:746  contract dJOB is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dJOB.sol\":405:568  function mint(address to, uint256 amount) external {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dJOB.sol\":576:743  function burn(address from, uint256 amount) external {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"dJOB.sol\":182:213  TokenAuthority public authority */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_68\n      jump\t// in\n    tag_69:\n      dup1\n      iszero\n      tag_70\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_71\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_70)\n    tag_71:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_72:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_72\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"dJOB.sol\":405:568  function mint(address to, uint256 amount) external {... */\n    tag_41:\n        /* \"dJOB.sol\":475:484  authority */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"dJOB.sol\":475:493  authority.isMinter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaa271e1a\n        /* \"dJOB.sol\":494:504  msg.sender */\n      caller\n        /* \"dJOB.sol\":475:505  authority.isMinter(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"dJOB.sol\":467:532  require(authority.isMinter(msg.sender), \"Not authorized to mint\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"dJOB.sol\":543:560  _mint(to, amount) */\n      tag_96\n        /* \"dJOB.sol\":549:551  to */\n      dup3\n        /* \"dJOB.sol\":553:559  amount */\n      dup3\n        /* \"dJOB.sol\":543:548  _mint */\n      tag_97\n        /* \"dJOB.sol\":543:560  _mint(to, amount) */\n      jump\t// in\n    tag_96:\n        /* \"dJOB.sol\":405:568  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_68\n      jump\t// in\n    tag_100:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_68\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"dJOB.sol\":576:743  function burn(address from, uint256 amount) external {... */\n    tag_52:\n        /* \"dJOB.sol\":648:657  authority */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"dJOB.sol\":648:666  authority.isBurner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4334614a\n        /* \"dJOB.sol\":667:677  msg.sender */\n      caller\n        /* \"dJOB.sol\":648:678  authority.isBurner(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_109:\n        /* \"dJOB.sol\":640:705  require(authority.isBurner(msg.sender), \"Not authorized to burn\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"dJOB.sol\":716:735  _burn(from, amount) */\n      tag_113\n        /* \"dJOB.sol\":722:726  from */\n      dup3\n        /* \"dJOB.sol\":728:734  amount */\n      dup3\n        /* \"dJOB.sol\":716:721  _burn */\n      tag_114\n        /* \"dJOB.sol\":716:735  _burn(from, amount) */\n      jump\t// in\n    tag_113:\n        /* \"dJOB.sol\":576:743  function burn(address from, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"dJOB.sol\":182:213  TokenAuthority public authority */\n    tag_58:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_156)\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_160)\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_162:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_163:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_164:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_165:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_166:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_202\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_162\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":711:782   */\n      tag_203\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_163\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_204\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_164\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":881:910   */\n      tag_205\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_165\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_19:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_207\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_166\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_168:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_170:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_171:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_213\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_170\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_172:\n        /* \"#utility.yul\":1876:1900   */\n      tag_215\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_171\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_216:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_173:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_218\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_172\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_174:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_175:\n        /* \"#utility.yul\":2232:2256   */\n      tag_221\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_174\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_222:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_176:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_224\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_175\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_22:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_227\n      tag_168\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2525:2644   */\n    tag_226:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_228\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_173\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_229\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_176\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_177:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_178:\n        /* \"#utility.yul\":3089:3110   */\n      tag_232\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_177\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_25:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_234\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_178\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_179:\n        /* \"#utility.yul\":3426:3450   */\n      tag_236\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_174\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_29:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_238\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_179\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_32:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_241\n      tag_168\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3801:3920   */\n    tag_240:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_242\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_173\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_243\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_173\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_244\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_176\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_180:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_181:\n        /* \"#utility.yul\":4491:4513   */\n      tag_247\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_180\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_38:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_249\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_181\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_44:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_252\n      tag_168\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4822:4941   */\n    tag_251:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_253\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_173\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5141   */\n    tag_182:\n        /* \"#utility.yul\":5109:5112   */\n      0x00\n        /* \"#utility.yul\":5130:5135   */\n      dup2\n        /* \"#utility.yul\":5123:5135   */\n      swap1\n      pop\n        /* \"#utility.yul\":5081:5141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5147:5289   */\n    tag_183:\n        /* \"#utility.yul\":5197:5206   */\n      0x00\n        /* \"#utility.yul\":5230:5283   */\n      tag_256\n        /* \"#utility.yul\":5248:5282   */\n      tag_257\n        /* \"#utility.yul\":5257:5281   */\n      tag_258\n        /* \"#utility.yul\":5275:5280   */\n      dup5\n        /* \"#utility.yul\":5257:5281   */\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5248:5282   */\n      tag_182\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5230:5283   */\n      tag_170\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5217:5283   */\n      swap1\n      pop\n        /* \"#utility.yul\":5147:5289   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5295:5421   */\n    tag_184:\n        /* \"#utility.yul\":5345:5354   */\n      0x00\n        /* \"#utility.yul\":5378:5415   */\n      tag_260\n        /* \"#utility.yul\":5409:5414   */\n      dup3\n        /* \"#utility.yul\":5378:5415   */\n      tag_183\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5365:5415   */\n      swap1\n      pop\n        /* \"#utility.yul\":5295:5421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5576   */\n    tag_185:\n        /* \"#utility.yul\":5500:5509   */\n      0x00\n        /* \"#utility.yul\":5533:5570   */\n      tag_262\n        /* \"#utility.yul\":5564:5569   */\n      dup3\n        /* \"#utility.yul\":5533:5570   */\n      tag_184\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5520:5570   */\n      swap1\n      pop\n        /* \"#utility.yul\":5427:5576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5582:5759   */\n    tag_186:\n        /* \"#utility.yul\":5692:5752   */\n      tag_264\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5692:5752   */\n      tag_185\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":5687:5690   */\n      dup3\n        /* \"#utility.yul\":5680:5753   */\n      mstore\n        /* \"#utility.yul\":5582:5759   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5765:6033   */\n    tag_60:\n        /* \"#utility.yul\":5881:5885   */\n      0x00\n        /* \"#utility.yul\":5919:5921   */\n      0x20\n        /* \"#utility.yul\":5908:5917   */\n      dup3\n        /* \"#utility.yul\":5904:5922   */\n      add\n        /* \"#utility.yul\":5896:5922   */\n      swap1\n      pop\n        /* \"#utility.yul\":5932:6026   */\n      tag_266\n        /* \"#utility.yul\":6023:6024   */\n      0x00\n        /* \"#utility.yul\":6012:6021   */\n      dup4\n        /* \"#utility.yul\":6008:6025   */\n      add\n        /* \"#utility.yul\":5999:6005   */\n      dup5\n        /* \"#utility.yul\":5932:6026   */\n      tag_186\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5765:6033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6039:6513   */\n    tag_63:\n        /* \"#utility.yul\":6107:6113   */\n      0x00\n        /* \"#utility.yul\":6115:6121   */\n      dup1\n        /* \"#utility.yul\":6164:6166   */\n      0x40\n        /* \"#utility.yul\":6152:6161   */\n      dup4\n        /* \"#utility.yul\":6143:6150   */\n      dup6\n        /* \"#utility.yul\":6139:6162   */\n      sub\n        /* \"#utility.yul\":6135:6167   */\n      slt\n        /* \"#utility.yul\":6132:6251   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":6170:6249   */\n      tag_269\n      tag_168\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6132:6251   */\n    tag_268:\n        /* \"#utility.yul\":6290:6291   */\n      0x00\n        /* \"#utility.yul\":6315:6368   */\n      tag_270\n        /* \"#utility.yul\":6360:6367   */\n      dup6\n        /* \"#utility.yul\":6351:6357   */\n      dup3\n        /* \"#utility.yul\":6340:6349   */\n      dup7\n        /* \"#utility.yul\":6336:6358   */\n      add\n        /* \"#utility.yul\":6315:6368   */\n      tag_173\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6305:6368   */\n      swap3\n      pop\n        /* \"#utility.yul\":6261:6378   */\n      pop\n        /* \"#utility.yul\":6417:6419   */\n      0x20\n        /* \"#utility.yul\":6443:6496   */\n      tag_271\n        /* \"#utility.yul\":6488:6495   */\n      dup6\n        /* \"#utility.yul\":6479:6485   */\n      dup3\n        /* \"#utility.yul\":6468:6477   */\n      dup7\n        /* \"#utility.yul\":6464:6486   */\n      add\n        /* \"#utility.yul\":6443:6496   */\n      tag_173\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6433:6496   */\n      swap2\n      pop\n        /* \"#utility.yul\":6388:6506   */\n      pop\n        /* \"#utility.yul\":6039:6513   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6519:6699   */\n    tag_187:\n        /* \"#utility.yul\":6567:6644   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6564:6565   */\n      0x00\n        /* \"#utility.yul\":6557:6645   */\n      mstore\n        /* \"#utility.yul\":6664:6668   */\n      0x22\n        /* \"#utility.yul\":6661:6662   */\n      0x04\n        /* \"#utility.yul\":6654:6669   */\n      mstore\n        /* \"#utility.yul\":6688:6692   */\n      0x24\n        /* \"#utility.yul\":6685:6686   */\n      0x00\n        /* \"#utility.yul\":6678:6693   */\n      revert\n        /* \"#utility.yul\":6705:7025   */\n    tag_68:\n        /* \"#utility.yul\":6749:6755   */\n      0x00\n        /* \"#utility.yul\":6786:6787   */\n      0x02\n        /* \"#utility.yul\":6780:6784   */\n      dup3\n        /* \"#utility.yul\":6776:6788   */\n      div\n        /* \"#utility.yul\":6766:6788   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:6834   */\n      0x01\n        /* \"#utility.yul\":6827:6831   */\n      dup3\n        /* \"#utility.yul\":6823:6835   */\n      and\n        /* \"#utility.yul\":6854:6872   */\n      dup1\n        /* \"#utility.yul\":6844:6925   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6910:6914   */\n      0x7f\n        /* \"#utility.yul\":6902:6908   */\n      dup3\n        /* \"#utility.yul\":6898:6915   */\n      and\n        /* \"#utility.yul\":6888:6915   */\n      swap2\n      pop\n        /* \"#utility.yul\":6844:6925   */\n    tag_274:\n        /* \"#utility.yul\":6972:6974   */\n      0x20\n        /* \"#utility.yul\":6964:6970   */\n      dup3\n        /* \"#utility.yul\":6961:6975   */\n      lt\n        /* \"#utility.yul\":6941:6959   */\n      dup2\n        /* \"#utility.yul\":6938:6976   */\n      sub\n        /* \"#utility.yul\":6935:7019   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6991:7009   */\n      tag_276\n      tag_187\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6935:7019   */\n    tag_275:\n        /* \"#utility.yul\":6756:7025   */\n      pop\n        /* \"#utility.yul\":6705:7025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7031:7149   */\n    tag_188:\n        /* \"#utility.yul\":7118:7142   */\n      tag_278\n        /* \"#utility.yul\":7136:7141   */\n      dup2\n        /* \"#utility.yul\":7118:7142   */\n      tag_171\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7113:7116   */\n      dup3\n        /* \"#utility.yul\":7106:7143   */\n      mstore\n        /* \"#utility.yul\":7031:7149   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7155:7377   */\n    tag_88:\n        /* \"#utility.yul\":7248:7252   */\n      0x00\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup3\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7263:7289   */\n      swap1\n      pop\n        /* \"#utility.yul\":7299:7370   */\n      tag_280\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7356:7365   */\n      dup4\n        /* \"#utility.yul\":7352:7369   */\n      add\n        /* \"#utility.yul\":7343:7349   */\n      dup5\n        /* \"#utility.yul\":7299:7370   */\n      tag_188\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":7155:7377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7383:7499   */\n    tag_189:\n        /* \"#utility.yul\":7453:7474   */\n      tag_282\n        /* \"#utility.yul\":7468:7473   */\n      dup2\n        /* \"#utility.yul\":7453:7474   */\n      tag_177\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7446:7451   */\n      dup2\n        /* \"#utility.yul\":7443:7475   */\n      eq\n        /* \"#utility.yul\":7433:7493   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":7489:7490   */\n      0x00\n        /* \"#utility.yul\":7486:7487   */\n      dup1\n        /* \"#utility.yul\":7479:7491   */\n      revert\n        /* \"#utility.yul\":7433:7493   */\n    tag_283:\n        /* \"#utility.yul\":7383:7499   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7505:7642   */\n    tag_190:\n        /* \"#utility.yul\":7559:7564   */\n      0x00\n        /* \"#utility.yul\":7590:7596   */\n      dup2\n        /* \"#utility.yul\":7584:7597   */\n      mload\n        /* \"#utility.yul\":7575:7597   */\n      swap1\n      pop\n        /* \"#utility.yul\":7606:7636   */\n      tag_285\n        /* \"#utility.yul\":7630:7635   */\n      dup2\n        /* \"#utility.yul\":7606:7636   */\n      tag_189\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7505:7642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7648:7993   */\n    tag_92:\n        /* \"#utility.yul\":7715:7721   */\n      0x00\n        /* \"#utility.yul\":7764:7766   */\n      0x20\n        /* \"#utility.yul\":7752:7761   */\n      dup3\n        /* \"#utility.yul\":7743:7750   */\n      dup5\n        /* \"#utility.yul\":7739:7762   */\n      sub\n        /* \"#utility.yul\":7735:7767   */\n      slt\n        /* \"#utility.yul\":7732:7851   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7770:7849   */\n      tag_288\n      tag_168\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7732:7851   */\n    tag_287:\n        /* \"#utility.yul\":7890:7891   */\n      0x00\n        /* \"#utility.yul\":7915:7976   */\n      tag_289\n        /* \"#utility.yul\":7968:7975   */\n      dup5\n        /* \"#utility.yul\":7959:7965   */\n      dup3\n        /* \"#utility.yul\":7948:7957   */\n      dup6\n        /* \"#utility.yul\":7944:7966   */\n      add\n        /* \"#utility.yul\":7915:7976   */\n      tag_190\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7905:7976   */\n      swap2\n      pop\n        /* \"#utility.yul\":7861:7986   */\n      pop\n        /* \"#utility.yul\":7648:7993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7999:8171   */\n    tag_191:\n        /* \"#utility.yul\":8139:8163   */\n      0x4e6f7420617574686f72697a656420746f206d696e7400000000000000000000\n        /* \"#utility.yul\":8135:8136   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup3\n        /* \"#utility.yul\":8123:8137   */\n      add\n        /* \"#utility.yul\":8116:8164   */\n      mstore\n        /* \"#utility.yul\":7999:8171   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8177:8543   */\n    tag_192:\n        /* \"#utility.yul\":8319:8322   */\n      0x00\n        /* \"#utility.yul\":8340:8407   */\n      tag_292\n        /* \"#utility.yul\":8404:8406   */\n      0x16\n        /* \"#utility.yul\":8399:8402   */\n      dup4\n        /* \"#utility.yul\":8340:8407   */\n      tag_163\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8333:8407   */\n      swap2\n      pop\n        /* \"#utility.yul\":8416:8509   */\n      tag_293\n        /* \"#utility.yul\":8505:8508   */\n      dup3\n        /* \"#utility.yul\":8416:8509   */\n      tag_191\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8534:8536   */\n      0x20\n        /* \"#utility.yul\":8529:8532   */\n      dup3\n        /* \"#utility.yul\":8525:8537   */\n      add\n        /* \"#utility.yul\":8518:8537   */\n      swap1\n      pop\n        /* \"#utility.yul\":8177:8543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8549:8968   */\n    tag_95:\n        /* \"#utility.yul\":8715:8719   */\n      0x00\n        /* \"#utility.yul\":8753:8755   */\n      0x20\n        /* \"#utility.yul\":8742:8751   */\n      dup3\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"#utility.yul\":8730:8756   */\n      swap1\n      pop\n        /* \"#utility.yul\":8802:8811   */\n      dup2\n        /* \"#utility.yul\":8796:8800   */\n      dup2\n        /* \"#utility.yul\":8792:8812   */\n      sub\n        /* \"#utility.yul\":8788:8789   */\n      0x00\n        /* \"#utility.yul\":8777:8786   */\n      dup4\n        /* \"#utility.yul\":8773:8790   */\n      add\n        /* \"#utility.yul\":8766:8813   */\n      mstore\n        /* \"#utility.yul\":8830:8961   */\n      tag_295\n        /* \"#utility.yul\":8956:8960   */\n      dup2\n        /* \"#utility.yul\":8830:8961   */\n      tag_192\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8822:8961   */\n      swap1\n      pop\n        /* \"#utility.yul\":8549:8968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8974:9146   */\n    tag_193:\n        /* \"#utility.yul\":9114:9138   */\n      0x4e6f7420617574686f72697a656420746f206275726e00000000000000000000\n        /* \"#utility.yul\":9110:9111   */\n      0x00\n        /* \"#utility.yul\":9102:9108   */\n      dup3\n        /* \"#utility.yul\":9098:9112   */\n      add\n        /* \"#utility.yul\":9091:9139   */\n      mstore\n        /* \"#utility.yul\":8974:9146   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9152:9518   */\n    tag_194:\n        /* \"#utility.yul\":9294:9297   */\n      0x00\n        /* \"#utility.yul\":9315:9382   */\n      tag_298\n        /* \"#utility.yul\":9379:9381   */\n      0x16\n        /* \"#utility.yul\":9374:9377   */\n      dup4\n        /* \"#utility.yul\":9315:9382   */\n      tag_163\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9308:9382   */\n      swap2\n      pop\n        /* \"#utility.yul\":9391:9484   */\n      tag_299\n        /* \"#utility.yul\":9480:9483   */\n      dup3\n        /* \"#utility.yul\":9391:9484   */\n      tag_193\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9509:9511   */\n      0x20\n        /* \"#utility.yul\":9504:9507   */\n      dup3\n        /* \"#utility.yul\":9500:9512   */\n      add\n        /* \"#utility.yul\":9493:9512   */\n      swap1\n      pop\n        /* \"#utility.yul\":9152:9518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9524:9943   */\n    tag_112:\n        /* \"#utility.yul\":9690:9694   */\n      0x00\n        /* \"#utility.yul\":9728:9730   */\n      0x20\n        /* \"#utility.yul\":9717:9726   */\n      dup3\n        /* \"#utility.yul\":9713:9731   */\n      add\n        /* \"#utility.yul\":9705:9731   */\n      swap1\n      pop\n        /* \"#utility.yul\":9777:9786   */\n      dup2\n        /* \"#utility.yul\":9771:9775   */\n      dup2\n        /* \"#utility.yul\":9767:9787   */\n      sub\n        /* \"#utility.yul\":9763:9764   */\n      0x00\n        /* \"#utility.yul\":9752:9761   */\n      dup4\n        /* \"#utility.yul\":9748:9765   */\n      add\n        /* \"#utility.yul\":9741:9788   */\n      mstore\n        /* \"#utility.yul\":9805:9936   */\n      tag_301\n        /* \"#utility.yul\":9931:9935   */\n      dup2\n        /* \"#utility.yul\":9805:9936   */\n      tag_194\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9797:9936   */\n      swap1\n      pop\n        /* \"#utility.yul\":9524:9943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9949:10391   */\n    tag_128:\n        /* \"#utility.yul\":10098:10102   */\n      0x00\n        /* \"#utility.yul\":10136:10138   */\n      0x60\n        /* \"#utility.yul\":10125:10134   */\n      dup3\n        /* \"#utility.yul\":10121:10139   */\n      add\n        /* \"#utility.yul\":10113:10139   */\n      swap1\n      pop\n        /* \"#utility.yul\":10149:10220   */\n      tag_303\n        /* \"#utility.yul\":10217:10218   */\n      0x00\n        /* \"#utility.yul\":10206:10215   */\n      dup4\n        /* \"#utility.yul\":10202:10219   */\n      add\n        /* \"#utility.yul\":10193:10199   */\n      dup7\n        /* \"#utility.yul\":10149:10220   */\n      tag_188\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10230:10302   */\n      tag_304\n        /* \"#utility.yul\":10298:10300   */\n      0x20\n        /* \"#utility.yul\":10287:10296   */\n      dup4\n        /* \"#utility.yul\":10283:10301   */\n      add\n        /* \"#utility.yul\":10274:10280   */\n      dup6\n        /* \"#utility.yul\":10230:10302   */\n      tag_179\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10312:10384   */\n      tag_305\n        /* \"#utility.yul\":10380:10382   */\n      0x40\n        /* \"#utility.yul\":10369:10378   */\n      dup4\n        /* \"#utility.yul\":10365:10383   */\n      add\n        /* \"#utility.yul\":10356:10362   */\n      dup5\n        /* \"#utility.yul\":10312:10384   */\n      tag_179\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":9949:10391   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10397:10577   */\n    tag_195:\n        /* \"#utility.yul\":10445:10522   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10442:10443   */\n      0x00\n        /* \"#utility.yul\":10435:10523   */\n      mstore\n        /* \"#utility.yul\":10542:10546   */\n      0x11\n        /* \"#utility.yul\":10539:10540   */\n      0x04\n        /* \"#utility.yul\":10532:10547   */\n      mstore\n        /* \"#utility.yul\":10566:10570   */\n      0x24\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10556:10571   */\n      revert\n        /* \"#utility.yul\":10583:10774   */\n    tag_155:\n        /* \"#utility.yul\":10623:10626   */\n      0x00\n        /* \"#utility.yul\":10642:10662   */\n      tag_308\n        /* \"#utility.yul\":10660:10661   */\n      dup3\n        /* \"#utility.yul\":10642:10662   */\n      tag_174\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10637:10662   */\n      swap2\n      pop\n        /* \"#utility.yul\":10676:10696   */\n      tag_309\n        /* \"#utility.yul\":10694:10695   */\n      dup4\n        /* \"#utility.yul\":10676:10696   */\n      tag_174\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10671:10696   */\n      swap3\n      pop\n        /* \"#utility.yul\":10719:10720   */\n      dup3\n        /* \"#utility.yul\":10716:10717   */\n      dup3\n        /* \"#utility.yul\":10712:10721   */\n      add\n        /* \"#utility.yul\":10705:10721   */\n      swap1\n      pop\n        /* \"#utility.yul\":10740:10743   */\n      dup1\n        /* \"#utility.yul\":10737:10738   */\n      dup3\n        /* \"#utility.yul\":10734:10744   */\n      gt\n        /* \"#utility.yul\":10731:10767   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":10747:10765   */\n      tag_311\n      tag_195\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10731:10767   */\n    tag_310:\n        /* \"#utility.yul\":10583:10774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220aa91cdb088490144c686aa86b80432617b59ff15aeb789e252ce5178e0e8836764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1406": {
									"entryPoint": null,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_870": {
									"entryPoint": 287,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 420,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:11",
										"nodeType": "YulBlock",
										"src": "0:7961:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "922:274:11",
													"nodeType": "YulBlock",
													"src": "922:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:11",
																"nodeType": "YulBlock",
																"src": "968:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:11"
																			},
																			"nativeSrc": "970:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:11"
																		},
																		"nativeSrc": "970:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:11"
																		},
																		"nativeSrc": "939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "964:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:11"
																},
																"nativeSrc": "935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "935:32:11"
															},
															"nativeSrc": "932:119:11",
															"nodeType": "YulIf",
															"src": "932:119:11"
														},
														{
															"nativeSrc": "1061:128:11",
															"nodeType": "YulBlock",
															"src": "1061:128:11",
															"statements": [
																{
																	"nativeSrc": "1076:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:11"
																				},
																				"nativeSrc": "1147:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:11"
																		},
																		"nativeSrc": "1115:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:11",
														"nodeType": "YulTypedName",
														"src": "892:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:11",
														"nodeType": "YulTypedName",
														"src": "903:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:11",
														"nodeType": "YulTypedName",
														"src": "915:6:11",
														"type": ""
													}
												],
												"src": "845:351:11"
											},
											{
												"body": {
													"nativeSrc": "1261:40:11",
													"nodeType": "YulBlock",
													"src": "1261:40:11",
													"statements": [
														{
															"nativeSrc": "1272:22:11",
															"nodeType": "YulAssignment",
															"src": "1272:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:11"
																},
																"nativeSrc": "1282:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:11",
														"nodeType": "YulTypedName",
														"src": "1244:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:11",
														"nodeType": "YulTypedName",
														"src": "1254:6:11",
														"type": ""
													}
												],
												"src": "1202:99:11"
											},
											{
												"body": {
													"nativeSrc": "1335:152:11",
													"nodeType": "YulBlock",
													"src": "1335:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:11"
																},
																"nativeSrc": "1345:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:11"
															},
															"nativeSrc": "1345:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:11"
																},
																"nativeSrc": "1442:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:11"
															},
															"nativeSrc": "1442:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:11"
																},
																"nativeSrc": "1466:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:11"
															},
															"nativeSrc": "1466:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:11"
											},
											{
												"body": {
													"nativeSrc": "1521:152:11",
													"nodeType": "YulBlock",
													"src": "1521:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:11",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:11"
																},
																"nativeSrc": "1531:88:11",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:11"
															},
															"nativeSrc": "1531:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:11"
																},
																"nativeSrc": "1628:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:11"
															},
															"nativeSrc": "1628:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:11"
																},
																"nativeSrc": "1652:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:11"
															},
															"nativeSrc": "1652:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:11"
											},
											{
												"body": {
													"nativeSrc": "1730:269:11",
													"nodeType": "YulBlock",
													"src": "1730:269:11",
													"statements": [
														{
															"nativeSrc": "1740:22:11",
															"nodeType": "YulAssignment",
															"src": "1740:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:11"
																},
																"nativeSrc": "1750:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:11"
																}
															]
														},
														{
															"nativeSrc": "1771:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:11"
																},
																"nativeSrc": "1797:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:11",
																"nodeType": "YulBlock",
																"src": "1848:51:11",
																"statements": [
																	{
																		"nativeSrc": "1862:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:11"
																			},
																			"nativeSrc": "1872:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:11"
																},
																"nativeSrc": "1821:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:11"
															},
															"nativeSrc": "1818:81:11",
															"nodeType": "YulIf",
															"src": "1818:81:11"
														},
														{
															"body": {
																"nativeSrc": "1951:42:11",
																"nodeType": "YulBlock",
																"src": "1951:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:11"
																			},
																			"nativeSrc": "1965:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:11"
																		},
																		"nativeSrc": "1965:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:11"
																		},
																		"nativeSrc": "1935:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:11"
																},
																"nativeSrc": "1912:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:11"
															},
															"nativeSrc": "1909:84:11",
															"nodeType": "YulIf",
															"src": "1909:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:11",
														"nodeType": "YulTypedName",
														"src": "1714:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:11",
														"nodeType": "YulTypedName",
														"src": "1723:6:11",
														"type": ""
													}
												],
												"src": "1679:320:11"
											},
											{
												"body": {
													"nativeSrc": "2059:87:11",
													"nodeType": "YulBlock",
													"src": "2059:87:11",
													"statements": [
														{
															"nativeSrc": "2069:11:11",
															"nodeType": "YulAssignment",
															"src": "2069:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:11",
																"nodeType": "YulIdentifier",
																"src": "2077:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:11"
																},
																"nativeSrc": "2090:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:11"
															},
															"nativeSrc": "2090:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:11"
														},
														{
															"nativeSrc": "2113:26:11",
															"nodeType": "YulAssignment",
															"src": "2113:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:11"
																},
																"nativeSrc": "2121:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:11",
														"nodeType": "YulTypedName",
														"src": "2046:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:11",
														"nodeType": "YulTypedName",
														"src": "2054:4:11",
														"type": ""
													}
												],
												"src": "2005:141:11"
											},
											{
												"body": {
													"nativeSrc": "2196:49:11",
													"nodeType": "YulBlock",
													"src": "2196:49:11",
													"statements": [
														{
															"nativeSrc": "2206:33:11",
															"nodeType": "YulAssignment",
															"src": "2206:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:11"
																		},
																		"nativeSrc": "2220:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:11"
																},
																"nativeSrc": "2216:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:11",
														"nodeType": "YulTypedName",
														"src": "2179:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:11",
														"nodeType": "YulTypedName",
														"src": "2189:6:11",
														"type": ""
													}
												],
												"src": "2152:93:11"
											},
											{
												"body": {
													"nativeSrc": "2304:54:11",
													"nodeType": "YulBlock",
													"src": "2304:54:11",
													"statements": [
														{
															"nativeSrc": "2314:37:11",
															"nodeType": "YulAssignment",
															"src": "2314:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:11"
																},
																"nativeSrc": "2335:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:11",
														"nodeType": "YulTypedName",
														"src": "2279:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:11",
														"nodeType": "YulTypedName",
														"src": "2285:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:11",
														"nodeType": "YulTypedName",
														"src": "2295:8:11",
														"type": ""
													}
												],
												"src": "2251:107:11"
											},
											{
												"body": {
													"nativeSrc": "2440:317:11",
													"nodeType": "YulBlock",
													"src": "2440:317:11",
													"statements": [
														{
															"nativeSrc": "2450:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:11"
																},
																"nativeSrc": "2467:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:11",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:11"
																},
																"nativeSrc": "2506:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:11",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:11",
															"nodeType": "YulAssignment",
															"src": "2612:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:11"
																},
																"nativeSrc": "2624:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:11"
																}
															]
														},
														{
															"nativeSrc": "2672:30:11",
															"nodeType": "YulAssignment",
															"src": "2672:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:11"
																		},
																		"nativeSrc": "2692:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:11"
																},
																"nativeSrc": "2681:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:11"
																}
															]
														},
														{
															"nativeSrc": "2711:40:11",
															"nodeType": "YulAssignment",
															"src": "2711:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nativeSrc": "2731:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:11"
																},
																"nativeSrc": "2721:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:11",
														"nodeType": "YulTypedName",
														"src": "2401:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:11",
														"nodeType": "YulTypedName",
														"src": "2408:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:11",
														"nodeType": "YulTypedName",
														"src": "2420:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:11",
														"nodeType": "YulTypedName",
														"src": "2433:6:11",
														"type": ""
													}
												],
												"src": "2364:393:11"
											},
											{
												"body": {
													"nativeSrc": "2808:32:11",
													"nodeType": "YulBlock",
													"src": "2808:32:11",
													"statements": [
														{
															"nativeSrc": "2818:16:11",
															"nodeType": "YulAssignment",
															"src": "2818:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:11",
																"nodeType": "YulIdentifier",
																"src": "2829:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:11",
														"nodeType": "YulTypedName",
														"src": "2790:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:11",
														"nodeType": "YulTypedName",
														"src": "2800:7:11",
														"type": ""
													}
												],
												"src": "2763:77:11"
											},
											{
												"body": {
													"nativeSrc": "2878:28:11",
													"nodeType": "YulBlock",
													"src": "2878:28:11",
													"statements": [
														{
															"nativeSrc": "2888:12:11",
															"nodeType": "YulAssignment",
															"src": "2888:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:11",
																"nodeType": "YulIdentifier",
																"src": "2895:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:11",
														"nodeType": "YulTypedName",
														"src": "2864:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:11",
														"nodeType": "YulTypedName",
														"src": "2874:3:11",
														"type": ""
													}
												],
												"src": "2846:60:11"
											},
											{
												"body": {
													"nativeSrc": "2972:82:11",
													"nodeType": "YulBlock",
													"src": "2972:82:11",
													"statements": [
														{
															"nativeSrc": "2982:66:11",
															"nodeType": "YulAssignment",
															"src": "2982:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:11"
																				},
																				"nativeSrc": "3022:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:11"
																		},
																		"nativeSrc": "3013:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:11"
																},
																"nativeSrc": "2995:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:11",
														"nodeType": "YulTypedName",
														"src": "2952:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:11",
														"nodeType": "YulTypedName",
														"src": "2962:9:11",
														"type": ""
													}
												],
												"src": "2912:142:11"
											},
											{
												"body": {
													"nativeSrc": "3107:28:11",
													"nodeType": "YulBlock",
													"src": "3107:28:11",
													"statements": [
														{
															"nativeSrc": "3117:12:11",
															"nodeType": "YulAssignment",
															"src": "3117:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:11",
																"nodeType": "YulIdentifier",
																"src": "3124:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:11",
														"nodeType": "YulTypedName",
														"src": "3093:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:11",
														"nodeType": "YulTypedName",
														"src": "3103:3:11",
														"type": ""
													}
												],
												"src": "3060:75:11"
											},
											{
												"body": {
													"nativeSrc": "3217:193:11",
													"nodeType": "YulBlock",
													"src": "3217:193:11",
													"statements": [
														{
															"nativeSrc": "3227:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:11"
																},
																"nativeSrc": "3251:39:11",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:11",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:11"
																				},
																				"nativeSrc": "3340:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:11"
																				},
																				"nativeSrc": "3361:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:11"
																		},
																		"nativeSrc": "3312:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:11"
																},
																"nativeSrc": "3299:105:11",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:11"
															},
															"nativeSrc": "3299:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:11",
														"nodeType": "YulTypedName",
														"src": "3194:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:11",
														"nodeType": "YulTypedName",
														"src": "3200:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:11",
														"nodeType": "YulTypedName",
														"src": "3208:7:11",
														"type": ""
													}
												],
												"src": "3141:269:11"
											},
											{
												"body": {
													"nativeSrc": "3465:24:11",
													"nodeType": "YulBlock",
													"src": "3465:24:11",
													"statements": [
														{
															"nativeSrc": "3475:8:11",
															"nodeType": "YulAssignment",
															"src": "3475:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:11",
																"nodeType": "YulLiteral",
																"src": "3482:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:11",
														"nodeType": "YulTypedName",
														"src": "3461:3:11",
														"type": ""
													}
												],
												"src": "3416:73:11"
											},
											{
												"body": {
													"nativeSrc": "3548:136:11",
													"nodeType": "YulBlock",
													"src": "3548:136:11",
													"statements": [
														{
															"nativeSrc": "3558:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:11"
																},
																"nativeSrc": "3572:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:11"
																},
																"nativeSrc": "3613:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:11"
															},
															"nativeSrc": "3613:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:11",
														"nodeType": "YulTypedName",
														"src": "3534:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:11",
														"nodeType": "YulTypedName",
														"src": "3540:6:11",
														"type": ""
													}
												],
												"src": "3495:189:11"
											},
											{
												"body": {
													"nativeSrc": "3740:136:11",
													"nodeType": "YulBlock",
													"src": "3740:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:11",
																"nodeType": "YulBlock",
																"src": "3807:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:11"
																			},
																			"nativeSrc": "3821:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:11"
																		},
																		"nativeSrc": "3821:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:11"
																},
																"nativeSrc": "3757:14:11",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:11"
															},
															"nativeSrc": "3750:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:11",
																"nodeType": "YulBlock",
																"src": "3772:26:11",
																"statements": [
																	{
																		"nativeSrc": "3774:22:11",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:11"
																			},
																			"nativeSrc": "3783:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:11",
																"nodeType": "YulBlock",
																"src": "3754:2:11",
																"statements": []
															},
															"src": "3750:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:11",
														"nodeType": "YulTypedName",
														"src": "3728:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:11",
														"nodeType": "YulTypedName",
														"src": "3735:3:11",
														"type": ""
													}
												],
												"src": "3690:186:11"
											},
											{
												"body": {
													"nativeSrc": "3961:464:11",
													"nodeType": "YulBlock",
													"src": "3961:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:11",
																"nodeType": "YulBlock",
																"src": "3987:431:11",
																"statements": [
																	{
																		"nativeSrc": "4001:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:11"
																			},
																			"nativeSrc": "4017:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:11",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:11"
																					},
																					"nativeSrc": "4101:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:11"
																			},
																			"nativeSrc": "4087:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:11",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:11",
																			"nodeType": "YulBlock",
																			"src": "4288:27:11",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:11",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:11",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:11"
																			},
																			"nativeSrc": "4269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:11"
																		},
																		"nativeSrc": "4266:49:11",
																		"nodeType": "YulIf",
																		"src": "4266:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:11"
																							},
																							"nativeSrc": "4384:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:11"
																					},
																					"nativeSrc": "4370:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:11"
																			},
																			"nativeSrc": "4328:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:11"
																		},
																		"nativeSrc": "4328:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:11"
																},
																"nativeSrc": "3975:11:11",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:11"
															},
															"nativeSrc": "3972:446:11",
															"nodeType": "YulIf",
															"src": "3972:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:11",
														"nodeType": "YulTypedName",
														"src": "3937:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:11",
														"nodeType": "YulTypedName",
														"src": "3944:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:11",
														"nodeType": "YulTypedName",
														"src": "3949:10:11",
														"type": ""
													}
												],
												"src": "3882:543:11"
											},
											{
												"body": {
													"nativeSrc": "4494:54:11",
													"nodeType": "YulBlock",
													"src": "4494:54:11",
													"statements": [
														{
															"nativeSrc": "4504:37:11",
															"nodeType": "YulAssignment",
															"src": "4504:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:11"
																},
																"nativeSrc": "4525:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:11",
														"nodeType": "YulTypedName",
														"src": "4469:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:11",
														"nodeType": "YulTypedName",
														"src": "4475:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:11",
														"nodeType": "YulTypedName",
														"src": "4485:8:11",
														"type": ""
													}
												],
												"src": "4431:117:11"
											},
											{
												"body": {
													"nativeSrc": "4605:118:11",
													"nodeType": "YulBlock",
													"src": "4605:118:11",
													"statements": [
														{
															"nativeSrc": "4615:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:11"
																				},
																				"nativeSrc": "4660:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:11"
																				},
																				"nativeSrc": "4675:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:11"
																		},
																		"nativeSrc": "4631:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:11"
																},
																"nativeSrc": "4627:56:11",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:11",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:11",
															"nodeType": "YulAssignment",
															"src": "4692:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:11"
																},
																"nativeSrc": "4702:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:11",
														"nodeType": "YulTypedName",
														"src": "4582:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:11",
														"nodeType": "YulTypedName",
														"src": "4588:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:11",
														"nodeType": "YulTypedName",
														"src": "4598:6:11",
														"type": ""
													}
												],
												"src": "4554:169:11"
											},
											{
												"body": {
													"nativeSrc": "4809:214:11",
													"nodeType": "YulBlock",
													"src": "4809:214:11",
													"statements": [
														{
															"nativeSrc": "4942:37:11",
															"nodeType": "YulAssignment",
															"src": "4942:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:11"
																},
																"nativeSrc": "4950:29:11",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:11"
																}
															]
														},
														{
															"nativeSrc": "4988:29:11",
															"nodeType": "YulAssignment",
															"src": "4988:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:11"
																		},
																		"nativeSrc": "5005:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:11"
																},
																"nativeSrc": "4996:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:11",
														"nodeType": "YulTypedName",
														"src": "4790:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:11",
														"nodeType": "YulTypedName",
														"src": "4796:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:11",
														"nodeType": "YulTypedName",
														"src": "4804:4:11",
														"type": ""
													}
												],
												"src": "4728:295:11"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:11",
													"nodeType": "YulBlock",
													"src": "5120:1303:11",
													"statements": [
														{
															"nativeSrc": "5131:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:11"
																},
																"nativeSrc": "5145:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:11",
																"nodeType": "YulBlock",
																"src": "5267:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:11"
																			},
																			"nativeSrc": "5269:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:11"
																		},
																		"nativeSrc": "5269:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:11"
																},
																"nativeSrc": "5236:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:11"
															},
															"nativeSrc": "5233:56:11",
															"nodeType": "YulIf",
															"src": "5233:56:11"
														},
														{
															"nativeSrc": "5299:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:11"
																		},
																		"nativeSrc": "5339:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:11"
																},
																"nativeSrc": "5313:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:11"
																},
																"nativeSrc": "5398:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:11"
															},
															"nativeSrc": "5398:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:11"
														},
														{
															"nativeSrc": "5475:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:11",
																"nodeType": "YulLiteral",
																"src": "5492:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:11",
															"nodeType": "YulAssignment",
															"src": "5503:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:11",
																"nodeType": "YulLiteral",
																"src": "5516:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:11",
																		"nodeType": "YulBlock",
																		"src": "5567:611:11",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:11",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:11"
																							},
																							"nativeSrc": "5608:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:11"
																					},
																					"nativeSrc": "5596:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:11",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:11"
																					},
																					"nativeSrc": "5646:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:11",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:11",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:11",
																					"nodeType": "YulBlock",
																					"src": "5764:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:11"
																												},
																												"nativeSrc": "5803:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:11"
																										},
																										"nativeSrc": "5797:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:11"
																								},
																								"nativeSrc": "5782:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:11"
																							},
																							"nativeSrc": "5782:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:11"
																						},
																						{
																							"nativeSrc": "5841:24:11",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:11",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:11"
																								},
																								"nativeSrc": "5851:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:11",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:11",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:11"
																								},
																								"nativeSrc": "5895:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:11"
																					},
																					"nativeSrc": "5727:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:11"
																				},
																				"nativeSrc": "5719:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:11",
																					"nodeType": "YulBlock",
																					"src": "5742:21:11",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:11",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:11",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:11"
																								},
																								"nativeSrc": "5749:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:11",
																					"nodeType": "YulBlock",
																					"src": "5723:3:11",
																					"statements": []
																				},
																				"src": "5719:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:11",
																					"nodeType": "YulBlock",
																					"src": "5963:156:11",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:11"
																										},
																										"nativeSrc": "6004:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:11"
																								},
																								"nativeSrc": "5998:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:11",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:11",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:11"
																												},
																												"nativeSrc": "6086:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:11"
																										},
																										"nativeSrc": "6056:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:11"
																								},
																								"nativeSrc": "6041:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:11"
																							},
																							"nativeSrc": "6041:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:11"
																					},
																					"nativeSrc": "5943:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:11"
																				},
																				"nativeSrc": "5940:179:11",
																				"nodeType": "YulIf",
																				"src": "5940:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:11",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:11"
																									},
																									"nativeSrc": "6149:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:11",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:11"
																							},
																							"nativeSrc": "6145:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:11"
																					},
																					"nativeSrc": "6132:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:11"
																				},
																				"nativeSrc": "6132:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:11"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:11",
																	"nodeType": "YulCase",
																	"src": "5560:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:11",
																		"nodeType": "YulBlock",
																		"src": "6195:222:11",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:11",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:11",
																					"nodeType": "YulBlock",
																					"src": "6246:67:11",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:11",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:11"
																										},
																										"nativeSrc": "6279:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:11"
																								},
																								"nativeSrc": "6273:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:11"
																				},
																				"nativeSrc": "6236:77:11",
																				"nodeType": "YulIf",
																				"src": "6236:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:11"
																							},
																							"nativeSrc": "6339:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:11"
																					},
																					"nativeSrc": "6326:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:11"
																				},
																				"nativeSrc": "6326:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:11"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:11",
																	"nodeType": "YulCase",
																	"src": "6187:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:11"
																},
																"nativeSrc": "5537:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:11"
															},
															"nativeSrc": "5530:887:11",
															"nodeType": "YulSwitch",
															"src": "5530:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:11",
														"nodeType": "YulTypedName",
														"src": "5109:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:11",
														"nodeType": "YulTypedName",
														"src": "5115:3:11",
														"type": ""
													}
												],
												"src": "5028:1395:11"
											},
											{
												"body": {
													"nativeSrc": "6494:53:11",
													"nodeType": "YulBlock",
													"src": "6494:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:11"
																		},
																		"nativeSrc": "6516:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:11"
																},
																"nativeSrc": "6504:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:11"
															},
															"nativeSrc": "6504:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:11",
														"nodeType": "YulTypedName",
														"src": "6482:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:11",
														"nodeType": "YulTypedName",
														"src": "6489:3:11",
														"type": ""
													}
												],
												"src": "6429:118:11"
											},
											{
												"body": {
													"nativeSrc": "6651:124:11",
													"nodeType": "YulBlock",
													"src": "6651:124:11",
													"statements": [
														{
															"nativeSrc": "6661:26:11",
															"nodeType": "YulAssignment",
															"src": "6661:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:11"
																},
																"nativeSrc": "6669:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:11"
																		},
																		"nativeSrc": "6750:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:11"
																},
																"nativeSrc": "6697:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:11"
															},
															"nativeSrc": "6697:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:11",
														"nodeType": "YulTypedName",
														"src": "6623:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:11",
														"nodeType": "YulTypedName",
														"src": "6635:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:11",
														"nodeType": "YulTypedName",
														"src": "6646:4:11",
														"type": ""
													}
												],
												"src": "6553:222:11"
											},
											{
												"body": {
													"nativeSrc": "6809:152:11",
													"nodeType": "YulBlock",
													"src": "6809:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:11"
																},
																"nativeSrc": "6819:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:11"
															},
															"nativeSrc": "6819:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:11"
																},
																"nativeSrc": "6916:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:11"
															},
															"nativeSrc": "6916:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:11"
																},
																"nativeSrc": "6940:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:11"
															},
															"nativeSrc": "6940:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:11"
											},
											{
												"body": {
													"nativeSrc": "7011:147:11",
													"nodeType": "YulBlock",
													"src": "7011:147:11",
													"statements": [
														{
															"nativeSrc": "7021:25:11",
															"nodeType": "YulAssignment",
															"src": "7021:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:11"
																},
																"nativeSrc": "7026:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:11"
																}
															]
														},
														{
															"nativeSrc": "7055:25:11",
															"nodeType": "YulAssignment",
															"src": "7055:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:11"
																},
																"nativeSrc": "7060:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:11"
																}
															]
														},
														{
															"nativeSrc": "7089:16:11",
															"nodeType": "YulAssignment",
															"src": "7089:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:11"
																},
																"nativeSrc": "7096:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:11",
																"nodeType": "YulBlock",
																"src": "7129:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:11"
																			},
																			"nativeSrc": "7131:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:11"
																		},
																		"nativeSrc": "7131:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:11"
																},
																"nativeSrc": "7118:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:11"
															},
															"nativeSrc": "7115:36:11",
															"nodeType": "YulIf",
															"src": "7115:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:11",
														"nodeType": "YulTypedName",
														"src": "6998:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:11",
														"nodeType": "YulTypedName",
														"src": "7001:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:11",
														"nodeType": "YulTypedName",
														"src": "7007:3:11",
														"type": ""
													}
												],
												"src": "6967:191:11"
											},
											{
												"body": {
													"nativeSrc": "7229:53:11",
													"nodeType": "YulBlock",
													"src": "7229:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:11"
																		},
																		"nativeSrc": "7251:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:11"
																},
																"nativeSrc": "7239:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:11"
															},
															"nativeSrc": "7239:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:11",
														"nodeType": "YulTypedName",
														"src": "7217:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:11",
														"nodeType": "YulTypedName",
														"src": "7224:3:11",
														"type": ""
													}
												],
												"src": "7164:118:11"
											},
											{
												"body": {
													"nativeSrc": "7442:288:11",
													"nodeType": "YulBlock",
													"src": "7442:288:11",
													"statements": [
														{
															"nativeSrc": "7452:26:11",
															"nodeType": "YulAssignment",
															"src": "7452:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:11"
																},
																"nativeSrc": "7460:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:11"
																		},
																		"nativeSrc": "7541:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:11"
																},
																"nativeSrc": "7488:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:11"
															},
															"nativeSrc": "7488:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:11"
																		},
																		"nativeSrc": "7622:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:11"
																},
																"nativeSrc": "7569:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:11"
															},
															"nativeSrc": "7569:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:11"
																		},
																		"nativeSrc": "7704:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:11"
																},
																"nativeSrc": "7651:72:11",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:11"
															},
															"nativeSrc": "7651:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:11",
														"nodeType": "YulTypedName",
														"src": "7398:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:11",
														"nodeType": "YulTypedName",
														"src": "7410:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:11",
														"nodeType": "YulTypedName",
														"src": "7418:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:11",
														"nodeType": "YulTypedName",
														"src": "7426:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:11",
														"nodeType": "YulTypedName",
														"src": "7437:4:11",
														"type": ""
													}
												],
												"src": "7288:442:11"
											},
											{
												"body": {
													"nativeSrc": "7834:124:11",
													"nodeType": "YulBlock",
													"src": "7834:124:11",
													"statements": [
														{
															"nativeSrc": "7844:26:11",
															"nodeType": "YulAssignment",
															"src": "7844:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:11"
																},
																"nativeSrc": "7852:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:11"
																		},
																		"nativeSrc": "7933:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:11"
																},
																"nativeSrc": "7880:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:11"
															},
															"nativeSrc": "7880:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:11",
														"nodeType": "YulTypedName",
														"src": "7806:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:11",
														"nodeType": "YulTypedName",
														"src": "7818:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:11",
														"nodeType": "YulTypedName",
														"src": "7829:4:11",
														"type": ""
													}
												],
												"src": "7736:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611b22380380611b228339818101604052810190610031919061041b565b6040518060400160405280600481526020017f644a4f42000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f644a4f420000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610680565b5080600490816100bc9190610680565b5050508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101193369d3c21bcecceda100000061011f60201b60201c565b50610834565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610186919061075e565b60405180910390fd5b6101a05f83836101a460201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101f4578060025f8282546101e891906107a4565b925050819055506102c2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561027d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610274939291906107e6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610309578060025f8282540392505081905550610353565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103b0919061081b565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103ea826103c1565b9050919050565b6103fa816103e0565b8114610404575f80fd5b50565b5f81519050610415816103f1565b92915050565b5f602082840312156104305761042f6103bd565b5b5f61043d84828501610407565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806104c157607f821691505b6020821081036104d4576104d361047d565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104fb565b61054086836104fb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61058461057f61057a84610558565b610561565b610558565b9050919050565b5f819050919050565b61059d8361056a565b6105b16105a98261058b565b848454610507565b825550505050565b5f90565b6105c56105b9565b6105d0818484610594565b505050565b5b818110156105f3576105e85f826105bd565b6001810190506105d6565b5050565b601f82111561063857610609816104da565b610612846104ec565b81016020851015610621578190505b61063561062d856104ec565b8301826105d5565b50505b505050565b5f82821c905092915050565b5f6106585f198460080261063d565b1980831691505092915050565b5f6106708383610649565b9150826002028217905092915050565b61068982610446565b67ffffffffffffffff8111156106a2576106a1610450565b5b6106ac82546104aa565b6106b78282856105f7565b5f60209050601f8311600181146106e8575f84156106d6578287015190505b6106e08582610665565b865550610747565b601f1984166106f6866104da565b5f5b8281101561071d578489015182556001820191506020850194506020810190506106f8565b8683101561073a5784890151610736601f891682610649565b8355505b6001600288020188555050505b505050505050565b610758816103e0565b82525050565b5f6020820190506107715f83018461074f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6107ae82610558565b91506107b983610558565b92508282019050808211156107d1576107d0610777565b5b92915050565b6107e081610558565b82525050565b5f6060820190506107f95f83018661074f565b61080660208301856107d7565b61081360408301846107d7565b949350505050565b5f60208201905061082e5f8301846107d7565b92915050565b6112e1806108415f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806370a082311161006f57806370a082311461018c57806395d89b41146101bc5780639dc29fac146101da578063a9059cbb146101f6578063bf7e214f14610226578063dd62ed3e14610244576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce5671461015257806340c10f1914610170575b5f80fd5b6100be610274565b6040516100cb9190610dc1565b60405180910390f35b6100ee60048036038101906100e99190610e72565b610304565b6040516100fb9190610eca565b60405180910390f35b61010c610326565b6040516101199190610ef2565b60405180910390f35b61013c60048036038101906101379190610f0b565b61032f565b6040516101499190610eca565b60405180910390f35b61015a61035d565b6040516101679190610f76565b60405180910390f35b61018a60048036038101906101859190610e72565b610365565b005b6101a660048036038101906101a19190610f8f565b61044b565b6040516101b39190610ef2565b60405180910390f35b6101c4610490565b6040516101d19190610dc1565b60405180910390f35b6101f460048036038101906101ef9190610e72565b610520565b005b610210600480360381019061020b9190610e72565b610606565b60405161021d9190610eca565b60405180910390f35b61022e610628565b60405161023b9190611015565b60405180910390f35b61025e6004803603810190610259919061102e565b61064d565b60405161026b9190610ef2565b60405180910390f35b60606003805461028390611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611099565b80156102fa5780601f106102d1576101008083540402835291602001916102fa565b820191905f5260205f20905b8154815290600101906020018083116102dd57829003601f168201915b5050505050905090565b5f8061030e6106cf565b905061031b8185856106d6565b600191505092915050565b5f600254905090565b5f806103396106cf565b90506103468582856106e8565b61035185858561077b565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa271e1a336040518263ffffffff1660e01b81526004016103bf91906110d8565b602060405180830381865afa1580156103da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103fe919061111b565b61043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490611190565b60405180910390fd5b610447828261086b565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461049f90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90611099565b80156105165780601f106104ed57610100808354040283529160200191610516565b820191905f5260205f20905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634334614a336040518263ffffffff1660e01b815260040161057a91906110d8565b602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061111b565b6105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef906111f8565b60405180910390fd5b61060282826108ea565b5050565b5f806106106106cf565b905061061d81858561077b565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6106e38383836001610969565b505050565b5f6106f3848461064d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107755781811015610766578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161075d93929190611216565b60405180910390fd5b61077484848484035f610969565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107eb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107e291906110d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361085b575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161085291906110d8565b60405180910390fd5b610866838383610b38565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108d291906110d8565b60405180910390fd5b6108e65f8383610b38565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361095a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095191906110d8565b60405180910390fd5b610965825f83610b38565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d9575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109d091906110d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a49575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a4091906110d8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b32578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b299190610ef2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b88578060025f828254610b7c9190611278565b92505081905550610c56565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c11578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0893929190611216565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9d578060025f8282540392505081905550610ce7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d449190610ef2565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d9382610d51565b610d9d8185610d5b565b9350610dad818560208601610d6b565b610db681610d79565b840191505092915050565b5f6020820190508181035f830152610dd98184610d89565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e0e82610de5565b9050919050565b610e1e81610e04565b8114610e28575f80fd5b50565b5f81359050610e3981610e15565b92915050565b5f819050919050565b610e5181610e3f565b8114610e5b575f80fd5b50565b5f81359050610e6c81610e48565b92915050565b5f8060408385031215610e8857610e87610de1565b5b5f610e9585828601610e2b565b9250506020610ea685828601610e5e565b9150509250929050565b5f8115159050919050565b610ec481610eb0565b82525050565b5f602082019050610edd5f830184610ebb565b92915050565b610eec81610e3f565b82525050565b5f602082019050610f055f830184610ee3565b92915050565b5f805f60608486031215610f2257610f21610de1565b5b5f610f2f86828701610e2b565b9350506020610f4086828701610e2b565b9250506040610f5186828701610e5e565b9150509250925092565b5f60ff82169050919050565b610f7081610f5b565b82525050565b5f602082019050610f895f830184610f67565b92915050565b5f60208284031215610fa457610fa3610de1565b5b5f610fb184828501610e2b565b91505092915050565b5f819050919050565b5f610fdd610fd8610fd384610de5565b610fba565b610de5565b9050919050565b5f610fee82610fc3565b9050919050565b5f610fff82610fe4565b9050919050565b61100f81610ff5565b82525050565b5f6020820190506110285f830184611006565b92915050565b5f806040838503121561104457611043610de1565b5b5f61105185828601610e2b565b925050602061106285828601610e2b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806110b057607f821691505b6020821081036110c3576110c261106c565b5b50919050565b6110d281610e04565b82525050565b5f6020820190506110eb5f8301846110c9565b92915050565b6110fa81610eb0565b8114611104575f80fd5b50565b5f81519050611115816110f1565b92915050565b5f602082840312156111305761112f610de1565b5b5f61113d84828501611107565b91505092915050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f61117a601683610d5b565b915061118582611146565b602082019050919050565b5f6020820190508181035f8301526111a78161116e565b9050919050565b7f4e6f7420617574686f72697a656420746f206275726e000000000000000000005f82015250565b5f6111e2601683610d5b565b91506111ed826111ae565b602082019050919050565b5f6020820190508181035f83015261120f816111d6565b9050919050565b5f6060820190506112295f8301866110c9565b6112366020830185610ee3565b6112436040830184610ee3565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128282610e3f565b915061128d83610e3f565b92508282019050808211156112a5576112a461124b565b5b9291505056fea2646970667358221220aa91cdb088490144c686aa86b80432617b59ff15aeb789e252ce5178e0e8836764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B22 CODESIZE SUB DUP1 PUSH2 0x1B22 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x644A4F4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x644A4F4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x680 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x680 JUMP JUMPDEST POP POP POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x119 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x834 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 PUSH0 DUP4 DUP4 PUSH2 0x1A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x7A4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2C2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x27D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x274 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x309 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x353 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3EA DUP3 PUSH2 0x3C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x415 DUP2 PUSH2 0x3F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x430 JUMPI PUSH2 0x42F PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x43D DUP5 DUP3 DUP6 ADD PUSH2 0x407 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x4C1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4D4 JUMPI PUSH2 0x4D3 PUSH2 0x47D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x536 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x540 DUP7 DUP4 PUSH2 0x4FB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x584 PUSH2 0x57F PUSH2 0x57A DUP5 PUSH2 0x558 JUMP JUMPDEST PUSH2 0x561 JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59D DUP4 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x5B1 PUSH2 0x5A9 DUP3 PUSH2 0x58B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x507 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x5C5 PUSH2 0x5B9 JUMP JUMPDEST PUSH2 0x5D0 DUP2 DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F3 JUMPI PUSH2 0x5E8 PUSH0 DUP3 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x609 DUP2 PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x612 DUP5 PUSH2 0x4EC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x621 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x635 PUSH2 0x62D DUP6 PUSH2 0x4EC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x5D5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x658 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x63D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x670 DUP4 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x689 DUP3 PUSH2 0x446 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x450 JUMP JUMPDEST JUMPDEST PUSH2 0x6AC DUP3 SLOAD PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x6B7 DUP3 DUP3 DUP6 PUSH2 0x5F7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x6E8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x6D6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x6E0 DUP6 DUP3 PUSH2 0x665 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6F6 DUP7 PUSH2 0x4DA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x71D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x73A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x736 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x649 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x771 PUSH0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x7AE DUP3 PUSH2 0x558 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B9 DUP4 PUSH2 0x558 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D0 PUSH2 0x777 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E0 DUP2 PUSH2 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7F9 PUSH0 DUP4 ADD DUP7 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x806 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x813 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7D7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82E PUSH0 DUP4 ADD DUP5 PUSH2 0x7D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E1 DUP1 PUSH2 0x841 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x244 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x283 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30E PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP2 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x339 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP6 DUP3 DUP6 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x351 DUP6 DUP6 DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA271E1A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 DUP3 DUP3 PUSH2 0x86B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x516 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x516 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4334614A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x602 DUP3 DUP3 PUSH2 0x8EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x610 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x61D DUP2 DUP6 DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x969 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP5 DUP5 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x775 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x766 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x774 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x969 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x85B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x866 DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 PUSH0 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH0 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA49 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB32 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB88 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC56 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC11 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCE7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD93 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xD9D DUP2 DUP6 PUSH2 0xD5B JUMP JUMPDEST SWAP4 POP PUSH2 0xDAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD9 DUP2 DUP5 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE0E DUP3 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1E DUP2 PUSH2 0xE04 JUMP JUMPDEST DUP2 EQ PUSH2 0xE28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE39 DUP2 PUSH2 0xE15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE3F JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6C DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE87 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE95 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC4 DUP2 PUSH2 0xEB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDD PUSH0 DUP4 ADD DUP5 PUSH2 0xEBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF05 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2F DUP7 DUP3 DUP8 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF40 DUP7 DUP3 DUP8 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF51 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF89 PUSH0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFDD PUSH2 0xFD8 PUSH2 0xFD3 DUP5 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFEE DUP3 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFF DUP3 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1028 PUSH0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1051 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x106C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D2 DUP2 PUSH2 0xE04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10EB PUSH0 DUP4 ADD DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FA DUP2 PUSH2 0xEB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1115 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x113D DUP5 DUP3 DUP6 ADD PUSH2 0x1107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x117A PUSH1 0x16 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1185 DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A7 DUP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206275726E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E2 PUSH1 0x16 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x11ED DUP3 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120F DUP2 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1229 PUSH0 DUP4 ADD DUP7 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x1236 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x1243 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1282 DUP3 PUSH2 0xE3F JUMP JUMPDEST SWAP2 POP PUSH2 0x128D DUP4 PUSH2 0xE3F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x124B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA SWAP2 0xCD 0xB0 DUP9 BLOBHASH ADD PREVRANDAO 0xC6 DUP7 0xAA DUP7 0xB8 DIV ORIGIN PUSH2 0x7B59 SELFDESTRUCT ISZERO 0xAE 0xB7 DUP10 0xE2 MSTORE 0xCE MLOAD PUSH25 0xE0E8836764736F6C6343000819003300000000000000000000 ",
							"sourceMap": "152:594:10:-:0;;;222:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;314:10:10::1;287:9;;:38;;;;;;;;;;;;;;;;;;336:37;342:10;354:18;336:5;;;:37;;:::i;:::-;222:175:::0;152:594;;7439:208:3;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;152:594:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_921": {
									"entryPoint": 1750,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 2409,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 2282,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_870": {
									"entryPoint": 2155,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": 1743,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 1768,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 1915,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 2872,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": 1613,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 772,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authority_1380": {
									"entryPoint": 1576,
									"id": 1380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_616": {
									"entryPoint": 1099,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1450": {
									"entryPoint": 1312,
									"id": 1450,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": 861,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1428": {
									"entryPoint": 869,
									"id": 1428,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 628,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 1168,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 806,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 815,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 1542,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_TokenAuthority_$1371_to_t_address_fromStack": {
									"entryPoint": 4102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_TokenAuthority_$1371__to_t_address__fromStack_reversed": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_TokenAuthority_$1371_to_t_address": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3553,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816": {
									"entryPoint": 4526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10777:11",
										"nodeType": "YulBlock",
										"src": "0:10777:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3791:519:11",
													"nodeType": "YulBlock",
													"src": "3791:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:11",
																"nodeType": "YulBlock",
																"src": "3837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:11"
																			},
																			"nativeSrc": "3839:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:11"
																		},
																		"nativeSrc": "3839:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:11"
																},
																"nativeSrc": "3804:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:11"
															},
															"nativeSrc": "3801:119:11",
															"nodeType": "YulIf",
															"src": "3801:119:11"
														},
														{
															"nativeSrc": "3930:117:11",
															"nodeType": "YulBlock",
															"src": "3930:117:11",
															"statements": [
																{
																	"nativeSrc": "3945:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:11"
																				},
																				"nativeSrc": "4005:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:11"
																		},
																		"nativeSrc": "3984:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:11",
															"nodeType": "YulBlock",
															"src": "4057:118:11",
															"statements": [
																{
																	"nativeSrc": "4072:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:11"
																				},
																				"nativeSrc": "4133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:11"
																		},
																		"nativeSrc": "4112:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:11",
															"nodeType": "YulBlock",
															"src": "4185:118:11",
															"statements": [
																{
																	"nativeSrc": "4200:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:11"
																				},
																				"nativeSrc": "4261:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:11"
																		},
																		"nativeSrc": "4240:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:11",
														"nodeType": "YulTypedName",
														"src": "3745:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:11",
														"nodeType": "YulTypedName",
														"src": "3756:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:11",
														"nodeType": "YulTypedName",
														"src": "3768:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:11",
														"nodeType": "YulTypedName",
														"src": "3776:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:11",
														"nodeType": "YulTypedName",
														"src": "3784:6:11",
														"type": ""
													}
												],
												"src": "3691:619:11"
											},
											{
												"body": {
													"nativeSrc": "4359:43:11",
													"nodeType": "YulBlock",
													"src": "4359:43:11",
													"statements": [
														{
															"nativeSrc": "4369:27:11",
															"nodeType": "YulAssignment",
															"src": "4369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:11"
																},
																"nativeSrc": "4380:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:11",
														"nodeType": "YulTypedName",
														"src": "4341:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:11",
														"nodeType": "YulTypedName",
														"src": "4351:7:11",
														"type": ""
													}
												],
												"src": "4316:86:11"
											},
											{
												"body": {
													"nativeSrc": "4469:51:11",
													"nodeType": "YulBlock",
													"src": "4469:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:11"
																		},
																		"nativeSrc": "4491:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:11"
																},
																"nativeSrc": "4479:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:11"
															},
															"nativeSrc": "4479:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:11",
														"nodeType": "YulTypedName",
														"src": "4457:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:11",
														"nodeType": "YulTypedName",
														"src": "4464:3:11",
														"type": ""
													}
												],
												"src": "4408:112:11"
											},
											{
												"body": {
													"nativeSrc": "4620:120:11",
													"nodeType": "YulBlock",
													"src": "4620:120:11",
													"statements": [
														{
															"nativeSrc": "4630:26:11",
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nativeSrc": "4638:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:11"
																		},
																		"nativeSrc": "4715:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:11"
																},
																"nativeSrc": "4666:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:11"
															},
															"nativeSrc": "4666:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:11",
														"nodeType": "YulTypedName",
														"src": "4592:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:11",
														"nodeType": "YulTypedName",
														"src": "4604:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:11",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4526:214:11"
											},
											{
												"body": {
													"nativeSrc": "4812:263:11",
													"nodeType": "YulBlock",
													"src": "4812:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:11",
																"nodeType": "YulBlock",
																"src": "4858:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:11"
																			},
																			"nativeSrc": "4860:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:11"
																		},
																		"nativeSrc": "4860:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:11"
																		},
																		"nativeSrc": "4829:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:11"
																},
																"nativeSrc": "4825:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:11"
															},
															"nativeSrc": "4822:119:11",
															"nodeType": "YulIf",
															"src": "4822:119:11"
														},
														{
															"nativeSrc": "4951:117:11",
															"nodeType": "YulBlock",
															"src": "4951:117:11",
															"statements": [
																{
																	"nativeSrc": "4966:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:11"
																				},
																				"nativeSrc": "5026:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:11"
																		},
																		"nativeSrc": "5005:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:11",
														"nodeType": "YulTypedName",
														"src": "4782:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:11",
														"nodeType": "YulTypedName",
														"src": "4793:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:11",
														"nodeType": "YulTypedName",
														"src": "4805:6:11",
														"type": ""
													}
												],
												"src": "4746:329:11"
											},
											{
												"body": {
													"nativeSrc": "5113:28:11",
													"nodeType": "YulBlock",
													"src": "5113:28:11",
													"statements": [
														{
															"nativeSrc": "5123:12:11",
															"nodeType": "YulAssignment",
															"src": "5123:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5130:5:11",
																"nodeType": "YulIdentifier",
																"src": "5130:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5123:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5123:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5081:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5099:5:11",
														"nodeType": "YulTypedName",
														"src": "5099:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5109:3:11",
														"nodeType": "YulTypedName",
														"src": "5109:3:11",
														"type": ""
													}
												],
												"src": "5081:60:11"
											},
											{
												"body": {
													"nativeSrc": "5207:82:11",
													"nodeType": "YulBlock",
													"src": "5207:82:11",
													"statements": [
														{
															"nativeSrc": "5217:66:11",
															"nodeType": "YulAssignment",
															"src": "5217:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5275:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5275:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5257:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5257:17:11"
																				},
																				"nativeSrc": "5257:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5257:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5248:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5248:8:11"
																		},
																		"nativeSrc": "5248:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5230:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5230:17:11"
																},
																"nativeSrc": "5230:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5230:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5217:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5217:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5147:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5187:5:11",
														"nodeType": "YulTypedName",
														"src": "5187:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5197:9:11",
														"nodeType": "YulTypedName",
														"src": "5197:9:11",
														"type": ""
													}
												],
												"src": "5147:142:11"
											},
											{
												"body": {
													"nativeSrc": "5355:66:11",
													"nodeType": "YulBlock",
													"src": "5355:66:11",
													"statements": [
														{
															"nativeSrc": "5365:50:11",
															"nodeType": "YulAssignment",
															"src": "5365:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5409:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5409:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5378:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5378:30:11"
																},
																"nativeSrc": "5378:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5378:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5365:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5365:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5295:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5335:5:11",
														"nodeType": "YulTypedName",
														"src": "5335:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5345:9:11",
														"nodeType": "YulTypedName",
														"src": "5345:9:11",
														"type": ""
													}
												],
												"src": "5295:126:11"
											},
											{
												"body": {
													"nativeSrc": "5510:66:11",
													"nodeType": "YulBlock",
													"src": "5510:66:11",
													"statements": [
														{
															"nativeSrc": "5520:50:11",
															"nodeType": "YulAssignment",
															"src": "5520:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5564:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5564:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5533:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5533:30:11"
																},
																"nativeSrc": "5533:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5533:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5520:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5520:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_TokenAuthority_$1371_to_t_address",
												"nativeSrc": "5427:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5490:5:11",
														"nodeType": "YulTypedName",
														"src": "5490:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5500:9:11",
														"nodeType": "YulTypedName",
														"src": "5500:9:11",
														"type": ""
													}
												],
												"src": "5427:149:11"
											},
											{
												"body": {
													"nativeSrc": "5670:89:11",
													"nodeType": "YulBlock",
													"src": "5670:89:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5687:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5687:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5746:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5746:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_TokenAuthority_$1371_to_t_address",
																			"nativeSrc": "5692:53:11",
																			"nodeType": "YulIdentifier",
																			"src": "5692:53:11"
																		},
																		"nativeSrc": "5692:60:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:60:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5680:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:11"
																},
																"nativeSrc": "5680:73:11",
																"nodeType": "YulFunctionCall",
																"src": "5680:73:11"
															},
															"nativeSrc": "5680:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "5680:73:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_TokenAuthority_$1371_to_t_address_fromStack",
												"nativeSrc": "5582:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5658:5:11",
														"nodeType": "YulTypedName",
														"src": "5658:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5665:3:11",
														"nodeType": "YulTypedName",
														"src": "5665:3:11",
														"type": ""
													}
												],
												"src": "5582:177:11"
											},
											{
												"body": {
													"nativeSrc": "5886:147:11",
													"nodeType": "YulBlock",
													"src": "5886:147:11",
													"statements": [
														{
															"nativeSrc": "5896:26:11",
															"nodeType": "YulAssignment",
															"src": "5896:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5908:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5908:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5919:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5919:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5904:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5904:3:11"
																},
																"nativeSrc": "5904:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5904:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5896:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5896:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5999:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5999:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6012:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6012:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6023:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6023:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6008:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6008:3:11"
																		},
																		"nativeSrc": "6008:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6008:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_TokenAuthority_$1371_to_t_address_fromStack",
																	"nativeSrc": "5932:66:11",
																	"nodeType": "YulIdentifier",
																	"src": "5932:66:11"
																},
																"nativeSrc": "5932:94:11",
																"nodeType": "YulFunctionCall",
																"src": "5932:94:11"
															},
															"nativeSrc": "5932:94:11",
															"nodeType": "YulExpressionStatement",
															"src": "5932:94:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_TokenAuthority_$1371__to_t_address__fromStack_reversed",
												"nativeSrc": "5765:268:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5858:9:11",
														"nodeType": "YulTypedName",
														"src": "5858:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5870:6:11",
														"nodeType": "YulTypedName",
														"src": "5870:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5881:4:11",
														"nodeType": "YulTypedName",
														"src": "5881:4:11",
														"type": ""
													}
												],
												"src": "5765:268:11"
											},
											{
												"body": {
													"nativeSrc": "6122:391:11",
													"nodeType": "YulBlock",
													"src": "6122:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6168:83:11",
																"nodeType": "YulBlock",
																"src": "6168:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6170:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6170:77:11"
																			},
																			"nativeSrc": "6170:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:79:11"
																		},
																		"nativeSrc": "6170:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6143:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6143:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6152:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6152:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6139:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:11"
																		},
																		"nativeSrc": "6139:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6139:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6164:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6164:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6135:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:11"
																},
																"nativeSrc": "6135:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6135:32:11"
															},
															"nativeSrc": "6132:119:11",
															"nodeType": "YulIf",
															"src": "6132:119:11"
														},
														{
															"nativeSrc": "6261:117:11",
															"nodeType": "YulBlock",
															"src": "6261:117:11",
															"statements": [
																{
																	"nativeSrc": "6276:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6276:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6290:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6290:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6280:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6280:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6305:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6305:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6340:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6340:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6351:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6351:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6336:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6336:3:11"
																				},
																				"nativeSrc": "6336:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6336:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6360:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6360:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6315:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6315:20:11"
																		},
																		"nativeSrc": "6315:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6305:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6305:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6388:118:11",
															"nodeType": "YulBlock",
															"src": "6388:118:11",
															"statements": [
																{
																	"nativeSrc": "6403:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6403:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6417:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6417:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6407:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6407:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6433:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6433:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6468:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6468:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6479:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6479:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6464:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6464:3:11"
																				},
																				"nativeSrc": "6464:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6464:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6488:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6488:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6443:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6443:20:11"
																		},
																		"nativeSrc": "6443:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6443:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6433:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6433:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6039:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6084:9:11",
														"nodeType": "YulTypedName",
														"src": "6084:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6095:7:11",
														"nodeType": "YulTypedName",
														"src": "6095:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6107:6:11",
														"nodeType": "YulTypedName",
														"src": "6107:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6115:6:11",
														"nodeType": "YulTypedName",
														"src": "6115:6:11",
														"type": ""
													}
												],
												"src": "6039:474:11"
											},
											{
												"body": {
													"nativeSrc": "6547:152:11",
													"nodeType": "YulBlock",
													"src": "6547:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6564:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6564:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6567:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6567:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6557:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:11"
																},
																"nativeSrc": "6557:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6557:88:11"
															},
															"nativeSrc": "6557:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6557:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6661:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6661:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6664:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6664:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6654:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:11"
																},
																"nativeSrc": "6654:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6654:15:11"
															},
															"nativeSrc": "6654:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6654:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6685:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6685:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6688:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6688:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6678:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:11"
																},
																"nativeSrc": "6678:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6678:15:11"
															},
															"nativeSrc": "6678:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6678:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6519:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6519:180:11"
											},
											{
												"body": {
													"nativeSrc": "6756:269:11",
													"nodeType": "YulBlock",
													"src": "6756:269:11",
													"statements": [
														{
															"nativeSrc": "6766:22:11",
															"nodeType": "YulAssignment",
															"src": "6766:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6780:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6780:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6786:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6786:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6776:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6776:3:11"
																},
																"nativeSrc": "6776:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6776:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6766:6:11"
																}
															]
														},
														{
															"nativeSrc": "6797:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6797:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6827:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6827:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6833:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6833:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6823:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:11"
																},
																"nativeSrc": "6823:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6823:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6801:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6801:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6874:51:11",
																"nodeType": "YulBlock",
																"src": "6874:51:11",
																"statements": [
																	{
																		"nativeSrc": "6888:27:11",
																		"nodeType": "YulAssignment",
																		"src": "6888:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6902:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6902:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6910:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6910:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6898:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6898:3:11"
																			},
																			"nativeSrc": "6898:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6898:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6888:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6854:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6854:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:11"
																},
																"nativeSrc": "6847:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6847:26:11"
															},
															"nativeSrc": "6844:81:11",
															"nodeType": "YulIf",
															"src": "6844:81:11"
														},
														{
															"body": {
																"nativeSrc": "6977:42:11",
																"nodeType": "YulBlock",
																"src": "6977:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6991:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6991:16:11"
																			},
																			"nativeSrc": "6991:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6991:18:11"
																		},
																		"nativeSrc": "6991:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6991:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6941:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6941:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6964:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6964:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6972:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6972:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6961:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6961:2:11"
																		},
																		"nativeSrc": "6961:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6961:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6938:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6938:2:11"
																},
																"nativeSrc": "6938:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6938:38:11"
															},
															"nativeSrc": "6935:84:11",
															"nodeType": "YulIf",
															"src": "6935:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6705:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6740:4:11",
														"nodeType": "YulTypedName",
														"src": "6740:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6749:6:11",
														"nodeType": "YulTypedName",
														"src": "6749:6:11",
														"type": ""
													}
												],
												"src": "6705:320:11"
											},
											{
												"body": {
													"nativeSrc": "7096:53:11",
													"nodeType": "YulBlock",
													"src": "7096:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7113:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7113:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7136:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7136:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7118:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "7118:17:11"
																		},
																		"nativeSrc": "7118:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7106:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:11"
																},
																"nativeSrc": "7106:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7106:37:11"
															},
															"nativeSrc": "7106:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "7106:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7031:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7084:5:11",
														"nodeType": "YulTypedName",
														"src": "7084:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7091:3:11",
														"nodeType": "YulTypedName",
														"src": "7091:3:11",
														"type": ""
													}
												],
												"src": "7031:118:11"
											},
											{
												"body": {
													"nativeSrc": "7253:124:11",
													"nodeType": "YulBlock",
													"src": "7253:124:11",
													"statements": [
														{
															"nativeSrc": "7263:26:11",
															"nodeType": "YulAssignment",
															"src": "7263:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7275:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7286:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7271:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:11"
																},
																"nativeSrc": "7271:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7271:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7263:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7263:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7343:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7343:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7356:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7356:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7367:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7367:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:11"
																		},
																		"nativeSrc": "7352:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7352:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7299:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7299:43:11"
																},
																"nativeSrc": "7299:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7299:71:11"
															},
															"nativeSrc": "7299:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7299:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7155:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7225:9:11",
														"nodeType": "YulTypedName",
														"src": "7225:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7237:6:11",
														"nodeType": "YulTypedName",
														"src": "7237:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7248:4:11",
														"nodeType": "YulTypedName",
														"src": "7248:4:11",
														"type": ""
													}
												],
												"src": "7155:222:11"
											},
											{
												"body": {
													"nativeSrc": "7423:76:11",
													"nodeType": "YulBlock",
													"src": "7423:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7477:16:11",
																"nodeType": "YulBlock",
																"src": "7477:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7486:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7486:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7489:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7489:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7479:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7479:6:11"
																			},
																			"nativeSrc": "7479:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:12:11"
																		},
																		"nativeSrc": "7479:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7479:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7446:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7446:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7468:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7468:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7453:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "7453:14:11"
																				},
																				"nativeSrc": "7453:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7453:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7443:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7443:2:11"
																		},
																		"nativeSrc": "7443:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7443:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7436:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:11"
																},
																"nativeSrc": "7436:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7436:40:11"
															},
															"nativeSrc": "7433:60:11",
															"nodeType": "YulIf",
															"src": "7433:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7383:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7416:5:11",
														"nodeType": "YulTypedName",
														"src": "7416:5:11",
														"type": ""
													}
												],
												"src": "7383:116:11"
											},
											{
												"body": {
													"nativeSrc": "7565:77:11",
													"nodeType": "YulBlock",
													"src": "7565:77:11",
													"statements": [
														{
															"nativeSrc": "7575:22:11",
															"nodeType": "YulAssignment",
															"src": "7575:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7590:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7590:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7584:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7584:5:11"
																},
																"nativeSrc": "7584:13:11",
																"nodeType": "YulFunctionCall",
																"src": "7584:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7575:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7575:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7630:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7630:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7606:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "7606:23:11"
																},
																"nativeSrc": "7606:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7606:30:11"
															},
															"nativeSrc": "7606:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7606:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7505:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7543:6:11",
														"nodeType": "YulTypedName",
														"src": "7543:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7551:3:11",
														"nodeType": "YulTypedName",
														"src": "7551:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7559:5:11",
														"nodeType": "YulTypedName",
														"src": "7559:5:11",
														"type": ""
													}
												],
												"src": "7505:137:11"
											},
											{
												"body": {
													"nativeSrc": "7722:271:11",
													"nodeType": "YulBlock",
													"src": "7722:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7768:83:11",
																"nodeType": "YulBlock",
																"src": "7768:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7770:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7770:77:11"
																			},
																			"nativeSrc": "7770:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7770:79:11"
																		},
																		"nativeSrc": "7770:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7770:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7743:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7743:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7752:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7752:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7739:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:11"
																		},
																		"nativeSrc": "7739:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7739:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7764:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7764:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7735:3:11"
																},
																"nativeSrc": "7735:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7735:32:11"
															},
															"nativeSrc": "7732:119:11",
															"nodeType": "YulIf",
															"src": "7732:119:11"
														},
														{
															"nativeSrc": "7861:125:11",
															"nodeType": "YulBlock",
															"src": "7861:125:11",
															"statements": [
																{
																	"nativeSrc": "7876:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7876:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7890:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7890:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7880:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7880:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7905:71:11",
																	"nodeType": "YulAssignment",
																	"src": "7905:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7948:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7948:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7959:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7959:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7944:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7944:3:11"
																				},
																				"nativeSrc": "7944:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7944:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7968:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7968:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7915:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7915:28:11"
																		},
																		"nativeSrc": "7915:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7915:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7905:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7905:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7648:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7692:9:11",
														"nodeType": "YulTypedName",
														"src": "7692:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7703:7:11",
														"nodeType": "YulTypedName",
														"src": "7703:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7715:6:11",
														"nodeType": "YulTypedName",
														"src": "7715:6:11",
														"type": ""
													}
												],
												"src": "7648:345:11"
											},
											{
												"body": {
													"nativeSrc": "8105:66:11",
													"nodeType": "YulBlock",
													"src": "8105:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8127:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8135:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8135:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8123:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:11"
																		},
																		"nativeSrc": "8123:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:14:11"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "8139:24:11",
																		"nodeType": "YulLiteral",
																		"src": "8139:24:11",
																		"type": "",
																		"value": "Not authorized to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8116:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8116:6:11"
																},
																"nativeSrc": "8116:48:11",
																"nodeType": "YulFunctionCall",
																"src": "8116:48:11"
															},
															"nativeSrc": "8116:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "8116:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
												"nativeSrc": "7999:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8097:6:11",
														"nodeType": "YulTypedName",
														"src": "8097:6:11",
														"type": ""
													}
												],
												"src": "7999:172:11"
											},
											{
												"body": {
													"nativeSrc": "8323:220:11",
													"nodeType": "YulBlock",
													"src": "8323:220:11",
													"statements": [
														{
															"nativeSrc": "8333:74:11",
															"nodeType": "YulAssignment",
															"src": "8333:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8399:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8399:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8404:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8404:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8340:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8340:58:11"
																},
																"nativeSrc": "8340:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8340:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8333:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8505:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8505:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																	"nativeSrc": "8416:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8416:88:11"
																},
																"nativeSrc": "8416:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8416:93:11"
															},
															"nativeSrc": "8416:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8416:93:11"
														},
														{
															"nativeSrc": "8518:19:11",
															"nodeType": "YulAssignment",
															"src": "8518:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8529:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8529:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8534:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8534:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8525:3:11"
																},
																"nativeSrc": "8525:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8525:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8518:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8518:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8177:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8311:3:11",
														"nodeType": "YulTypedName",
														"src": "8311:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8319:3:11",
														"nodeType": "YulTypedName",
														"src": "8319:3:11",
														"type": ""
													}
												],
												"src": "8177:366:11"
											},
											{
												"body": {
													"nativeSrc": "8720:248:11",
													"nodeType": "YulBlock",
													"src": "8720:248:11",
													"statements": [
														{
															"nativeSrc": "8730:26:11",
															"nodeType": "YulAssignment",
															"src": "8730:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8742:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8742:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8753:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8753:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8738:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:11"
																},
																"nativeSrc": "8738:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8738:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8730:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8730:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8777:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8788:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8788:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8773:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:11"
																		},
																		"nativeSrc": "8773:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8773:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8796:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8796:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8802:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8802:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8792:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8792:3:11"
																		},
																		"nativeSrc": "8792:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8792:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:11"
																},
																"nativeSrc": "8766:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8766:47:11"
															},
															"nativeSrc": "8766:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8766:47:11"
														},
														{
															"nativeSrc": "8822:139:11",
															"nodeType": "YulAssignment",
															"src": "8822:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8956:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8956:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8830:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8830:124:11"
																},
																"nativeSrc": "8830:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8830:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8822:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8822:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8549:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8700:9:11",
														"nodeType": "YulTypedName",
														"src": "8700:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8715:4:11",
														"nodeType": "YulTypedName",
														"src": "8715:4:11",
														"type": ""
													}
												],
												"src": "8549:419:11"
											},
											{
												"body": {
													"nativeSrc": "9080:66:11",
													"nodeType": "YulBlock",
													"src": "9080:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9102:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9102:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9110:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9110:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9098:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9098:3:11"
																		},
																		"nativeSrc": "9098:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9098:14:11"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206275726e",
																		"kind": "string",
																		"nativeSrc": "9114:24:11",
																		"nodeType": "YulLiteral",
																		"src": "9114:24:11",
																		"type": "",
																		"value": "Not authorized to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9091:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:11"
																},
																"nativeSrc": "9091:48:11",
																"nodeType": "YulFunctionCall",
																"src": "9091:48:11"
															},
															"nativeSrc": "9091:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "9091:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
												"nativeSrc": "8974:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9072:6:11",
														"nodeType": "YulTypedName",
														"src": "9072:6:11",
														"type": ""
													}
												],
												"src": "8974:172:11"
											},
											{
												"body": {
													"nativeSrc": "9298:220:11",
													"nodeType": "YulBlock",
													"src": "9298:220:11",
													"statements": [
														{
															"nativeSrc": "9308:74:11",
															"nodeType": "YulAssignment",
															"src": "9308:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9374:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9374:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9379:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9379:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9315:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9315:58:11"
																},
																"nativeSrc": "9315:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9315:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9308:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9308:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9480:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9480:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																	"nativeSrc": "9391:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9391:88:11"
																},
																"nativeSrc": "9391:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9391:93:11"
															},
															"nativeSrc": "9391:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9391:93:11"
														},
														{
															"nativeSrc": "9493:19:11",
															"nodeType": "YulAssignment",
															"src": "9493:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9504:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9504:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9509:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9509:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9500:3:11"
																},
																"nativeSrc": "9500:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9500:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9493:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9493:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9152:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9286:3:11",
														"nodeType": "YulTypedName",
														"src": "9286:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9294:3:11",
														"nodeType": "YulTypedName",
														"src": "9294:3:11",
														"type": ""
													}
												],
												"src": "9152:366:11"
											},
											{
												"body": {
													"nativeSrc": "9695:248:11",
													"nodeType": "YulBlock",
													"src": "9695:248:11",
													"statements": [
														{
															"nativeSrc": "9705:26:11",
															"nodeType": "YulAssignment",
															"src": "9705:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9717:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9717:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9728:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9728:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9713:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9713:3:11"
																},
																"nativeSrc": "9713:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9713:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9705:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9705:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9752:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9752:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9763:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9763:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9748:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9748:3:11"
																		},
																		"nativeSrc": "9748:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9771:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9771:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9777:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9777:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9767:3:11"
																		},
																		"nativeSrc": "9767:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9767:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9741:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9741:6:11"
																},
																"nativeSrc": "9741:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9741:47:11"
															},
															"nativeSrc": "9741:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9741:47:11"
														},
														{
															"nativeSrc": "9797:139:11",
															"nodeType": "YulAssignment",
															"src": "9797:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9931:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9931:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9805:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9805:124:11"
																},
																"nativeSrc": "9805:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9805:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9797:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9797:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9524:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9675:9:11",
														"nodeType": "YulTypedName",
														"src": "9675:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9690:4:11",
														"nodeType": "YulTypedName",
														"src": "9690:4:11",
														"type": ""
													}
												],
												"src": "9524:419:11"
											},
											{
												"body": {
													"nativeSrc": "10103:288:11",
													"nodeType": "YulBlock",
													"src": "10103:288:11",
													"statements": [
														{
															"nativeSrc": "10113:26:11",
															"nodeType": "YulAssignment",
															"src": "10113:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10125:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10136:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10136:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:11"
																},
																"nativeSrc": "10121:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10121:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10113:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10193:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10193:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10206:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10206:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10217:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10217:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10202:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10202:3:11"
																		},
																		"nativeSrc": "10202:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10202:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10149:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10149:43:11"
																},
																"nativeSrc": "10149:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10149:71:11"
															},
															"nativeSrc": "10149:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10149:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10274:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10274:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10287:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10287:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10298:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10298:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10283:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10283:3:11"
																		},
																		"nativeSrc": "10283:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10283:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10230:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10230:43:11"
																},
																"nativeSrc": "10230:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10230:72:11"
															},
															"nativeSrc": "10230:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10230:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10356:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10356:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10369:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10369:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10380:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10380:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10365:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10365:3:11"
																		},
																		"nativeSrc": "10365:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10365:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10312:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10312:43:11"
																},
																"nativeSrc": "10312:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10312:72:11"
															},
															"nativeSrc": "10312:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10312:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9949:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10059:9:11",
														"nodeType": "YulTypedName",
														"src": "10059:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10071:6:11",
														"nodeType": "YulTypedName",
														"src": "10071:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10079:6:11",
														"nodeType": "YulTypedName",
														"src": "10079:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10087:6:11",
														"nodeType": "YulTypedName",
														"src": "10087:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10098:4:11",
														"nodeType": "YulTypedName",
														"src": "10098:4:11",
														"type": ""
													}
												],
												"src": "9949:442:11"
											},
											{
												"body": {
													"nativeSrc": "10425:152:11",
													"nodeType": "YulBlock",
													"src": "10425:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10442:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10442:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10445:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10445:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10435:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10435:6:11"
																},
																"nativeSrc": "10435:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10435:88:11"
															},
															"nativeSrc": "10435:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10435:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10539:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10539:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10542:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10542:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10532:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10532:6:11"
																},
																"nativeSrc": "10532:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10532:15:11"
															},
															"nativeSrc": "10532:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10532:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10566:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10566:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10556:6:11"
																},
																"nativeSrc": "10556:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10556:15:11"
															},
															"nativeSrc": "10556:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10556:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10397:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10397:180:11"
											},
											{
												"body": {
													"nativeSrc": "10627:147:11",
													"nodeType": "YulBlock",
													"src": "10627:147:11",
													"statements": [
														{
															"nativeSrc": "10637:25:11",
															"nodeType": "YulAssignment",
															"src": "10637:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10660:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10660:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10642:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10642:17:11"
																},
																"nativeSrc": "10642:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10642:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10637:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10637:1:11"
																}
															]
														},
														{
															"nativeSrc": "10671:25:11",
															"nodeType": "YulAssignment",
															"src": "10671:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10694:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10694:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10676:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10676:17:11"
																},
																"nativeSrc": "10676:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10676:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10671:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10671:1:11"
																}
															]
														},
														{
															"nativeSrc": "10705:16:11",
															"nodeType": "YulAssignment",
															"src": "10705:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10716:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10716:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10719:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10719:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10712:3:11"
																},
																"nativeSrc": "10712:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10712:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10705:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10745:22:11",
																"nodeType": "YulBlock",
																"src": "10745:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10747:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10747:16:11"
																			},
																			"nativeSrc": "10747:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10747:18:11"
																		},
																		"nativeSrc": "10747:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10747:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10737:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10737:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10740:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10740:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10734:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10734:2:11"
																},
																"nativeSrc": "10734:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10734:10:11"
															},
															"nativeSrc": "10731:36:11",
															"nodeType": "YulIf",
															"src": "10731:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10583:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10614:1:11",
														"nodeType": "YulTypedName",
														"src": "10614:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10617:1:11",
														"nodeType": "YulTypedName",
														"src": "10617:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10623:3:11",
														"nodeType": "YulTypedName",
														"src": "10623:3:11",
														"type": ""
													}
												],
												"src": "10583:191:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_TokenAuthority_$1371_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_TokenAuthority_$1371_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_TokenAuthority_$1371_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_TokenAuthority_$1371__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_TokenAuthority_$1371_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806370a082311161006f57806370a082311461018c57806395d89b41146101bc5780639dc29fac146101da578063a9059cbb146101f6578063bf7e214f14610226578063dd62ed3e14610244576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce5671461015257806340c10f1914610170575b5f80fd5b6100be610274565b6040516100cb9190610dc1565b60405180910390f35b6100ee60048036038101906100e99190610e72565b610304565b6040516100fb9190610eca565b60405180910390f35b61010c610326565b6040516101199190610ef2565b60405180910390f35b61013c60048036038101906101379190610f0b565b61032f565b6040516101499190610eca565b60405180910390f35b61015a61035d565b6040516101679190610f76565b60405180910390f35b61018a60048036038101906101859190610e72565b610365565b005b6101a660048036038101906101a19190610f8f565b61044b565b6040516101b39190610ef2565b60405180910390f35b6101c4610490565b6040516101d19190610dc1565b60405180910390f35b6101f460048036038101906101ef9190610e72565b610520565b005b610210600480360381019061020b9190610e72565b610606565b60405161021d9190610eca565b60405180910390f35b61022e610628565b60405161023b9190611015565b60405180910390f35b61025e6004803603810190610259919061102e565b61064d565b60405161026b9190610ef2565b60405180910390f35b60606003805461028390611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611099565b80156102fa5780601f106102d1576101008083540402835291602001916102fa565b820191905f5260205f20905b8154815290600101906020018083116102dd57829003601f168201915b5050505050905090565b5f8061030e6106cf565b905061031b8185856106d6565b600191505092915050565b5f600254905090565b5f806103396106cf565b90506103468582856106e8565b61035185858561077b565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa271e1a336040518263ffffffff1660e01b81526004016103bf91906110d8565b602060405180830381865afa1580156103da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103fe919061111b565b61043d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043490611190565b60405180910390fd5b610447828261086b565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461049f90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546104cb90611099565b80156105165780601f106104ed57610100808354040283529160200191610516565b820191905f5260205f20905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634334614a336040518263ffffffff1660e01b815260040161057a91906110d8565b602060405180830381865afa158015610595573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b9919061111b565b6105f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ef906111f8565b60405180910390fd5b61060282826108ea565b5050565b5f806106106106cf565b905061061d81858561077b565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6106e38383836001610969565b505050565b5f6106f3848461064d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107755781811015610766578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161075d93929190611216565b60405180910390fd5b61077484848484035f610969565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107eb575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107e291906110d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361085b575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161085291906110d8565b60405180910390fd5b610866838383610b38565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108d291906110d8565b60405180910390fd5b6108e65f8383610b38565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361095a575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095191906110d8565b60405180910390fd5b610965825f83610b38565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d9575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109d091906110d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a49575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a4091906110d8565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b32578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b299190610ef2565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b88578060025f828254610b7c9190611278565b92505081905550610c56565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c11578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0893929190611216565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9d578060025f8282540392505081905550610ce7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d449190610ef2565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d9382610d51565b610d9d8185610d5b565b9350610dad818560208601610d6b565b610db681610d79565b840191505092915050565b5f6020820190508181035f830152610dd98184610d89565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e0e82610de5565b9050919050565b610e1e81610e04565b8114610e28575f80fd5b50565b5f81359050610e3981610e15565b92915050565b5f819050919050565b610e5181610e3f565b8114610e5b575f80fd5b50565b5f81359050610e6c81610e48565b92915050565b5f8060408385031215610e8857610e87610de1565b5b5f610e9585828601610e2b565b9250506020610ea685828601610e5e565b9150509250929050565b5f8115159050919050565b610ec481610eb0565b82525050565b5f602082019050610edd5f830184610ebb565b92915050565b610eec81610e3f565b82525050565b5f602082019050610f055f830184610ee3565b92915050565b5f805f60608486031215610f2257610f21610de1565b5b5f610f2f86828701610e2b565b9350506020610f4086828701610e2b565b9250506040610f5186828701610e5e565b9150509250925092565b5f60ff82169050919050565b610f7081610f5b565b82525050565b5f602082019050610f895f830184610f67565b92915050565b5f60208284031215610fa457610fa3610de1565b5b5f610fb184828501610e2b565b91505092915050565b5f819050919050565b5f610fdd610fd8610fd384610de5565b610fba565b610de5565b9050919050565b5f610fee82610fc3565b9050919050565b5f610fff82610fe4565b9050919050565b61100f81610ff5565b82525050565b5f6020820190506110285f830184611006565b92915050565b5f806040838503121561104457611043610de1565b5b5f61105185828601610e2b565b925050602061106285828601610e2b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806110b057607f821691505b6020821081036110c3576110c261106c565b5b50919050565b6110d281610e04565b82525050565b5f6020820190506110eb5f8301846110c9565b92915050565b6110fa81610eb0565b8114611104575f80fd5b50565b5f81519050611115816110f1565b92915050565b5f602082840312156111305761112f610de1565b5b5f61113d84828501611107565b91505092915050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f61117a601683610d5b565b915061118582611146565b602082019050919050565b5f6020820190508181035f8301526111a78161116e565b9050919050565b7f4e6f7420617574686f72697a656420746f206275726e000000000000000000005f82015250565b5f6111e2601683610d5b565b91506111ed826111ae565b602082019050919050565b5f6020820190508181035f83015261120f816111d6565b9050919050565b5f6060820190506112295f8301866110c9565b6112366020830185610ee3565b6112436040830184610ee3565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128282610e3f565b915061128d83610e3f565b92508282019050808211156112a5576112a461124b565b5b9291505056fea2646970667358221220aa91cdb088490144c686aa86b80432617b59ff15aeb789e252ce5178e0e8836764736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x244 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xDC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x283 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x30E PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x31B DUP2 DUP6 DUP6 PUSH2 0x6D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x339 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP6 DUP3 DUP6 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x351 DUP6 DUP6 DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAA271E1A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x43D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x434 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x447 DUP3 DUP3 PUSH2 0x86B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x49F SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4CB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x516 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x516 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4334614A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x595 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EF SWAP1 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x602 DUP3 DUP3 PUSH2 0x8EA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x610 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x61D DUP2 DUP6 DUP6 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x969 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6F3 DUP5 DUP5 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x775 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x766 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x774 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x969 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x85B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x866 DUP4 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 PUSH0 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x95A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH0 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA49 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB32 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB88 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB7C SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC56 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC11 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC08 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCE7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD93 DUP3 PUSH2 0xD51 JUMP JUMPDEST PUSH2 0xD9D DUP2 DUP6 PUSH2 0xD5B JUMP JUMPDEST SWAP4 POP PUSH2 0xDAD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD6B JUMP JUMPDEST PUSH2 0xDB6 DUP2 PUSH2 0xD79 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD9 DUP2 DUP5 PUSH2 0xD89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE0E DUP3 PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1E DUP2 PUSH2 0xE04 JUMP JUMPDEST DUP2 EQ PUSH2 0xE28 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE39 DUP2 PUSH2 0xE15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE51 DUP2 PUSH2 0xE3F JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6C DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE87 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE95 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC4 DUP2 PUSH2 0xEB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEDD PUSH0 DUP4 ADD DUP5 PUSH2 0xEBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEEC DUP2 PUSH2 0xE3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF05 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF22 JUMPI PUSH2 0xF21 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF2F DUP7 DUP3 DUP8 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF40 DUP7 DUP3 DUP8 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF51 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF89 PUSH0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH2 0xFA3 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFDD PUSH2 0xFD8 PUSH2 0xFD3 DUP5 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xDE5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFEE DUP3 PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFF DUP3 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100F DUP2 PUSH2 0xFF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1028 PUSH0 DUP4 ADD DUP5 PUSH2 0x1006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1044 JUMPI PUSH2 0x1043 PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1051 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1062 DUP6 DUP3 DUP7 ADD PUSH2 0xE2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C3 JUMPI PUSH2 0x10C2 PUSH2 0x106C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D2 DUP2 PUSH2 0xE04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10EB PUSH0 DUP4 ADD DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FA DUP2 PUSH2 0xEB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1115 DUP2 PUSH2 0x10F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1130 JUMPI PUSH2 0x112F PUSH2 0xDE1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x113D DUP5 DUP3 DUP6 ADD PUSH2 0x1107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x117A PUSH1 0x16 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1185 DUP3 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A7 DUP2 PUSH2 0x116E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206275726E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E2 PUSH1 0x16 DUP4 PUSH2 0xD5B JUMP JUMPDEST SWAP2 POP PUSH2 0x11ED DUP3 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120F DUP2 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1229 PUSH0 DUP4 ADD DUP7 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x1236 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEE3 JUMP JUMPDEST PUSH2 0x1243 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEE3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1282 DUP3 PUSH2 0xE3F JUMP JUMPDEST SWAP2 POP PUSH2 0x128D DUP4 PUSH2 0xE3F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x124B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA SWAP2 0xCD 0xB0 DUP9 BLOBHASH ADD PREVRANDAO 0xC6 DUP7 0xAA DUP7 0xB8 DIV ORIGIN PUSH2 0x7B59 SELFDESTRUCT ISZERO 0xAE 0xB7 DUP10 0xE2 MSTORE 0xCE MLOAD PUSH25 0xE0E8836764736F6C6343000819003300000000000000000000 ",
							"sourceMap": "152:594:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:163:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:167:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3296:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182:31:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;405:163:10:-;475:9;;;;;;;;;;;:18;;;494:10;475:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;467:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;543:17;549:2;553:6;543:5;:17::i;:::-;405:163;;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;576:167:10:-;648:9;;;;;;;;;;;:18;;;667:10;648:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;640:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;716:19;722:4;728:6;716:5;:19::i;:::-;576:167;;:::o;3296:178:3:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;182:31:10:-;;;;;;;;;;;;;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:60::-;5109:3;5130:5;5123:12;;5081:60;;;:::o;5147:142::-;5197:9;5230:53;5248:34;5257:24;5275:5;5257:24;:::i;:::-;5248:34;:::i;:::-;5230:53;:::i;:::-;5217:66;;5147:142;;;:::o;5295:126::-;5345:9;5378:37;5409:5;5378:37;:::i;:::-;5365:50;;5295:126;;;:::o;5427:149::-;5500:9;5533:37;5564:5;5533:37;:::i;:::-;5520:50;;5427:149;;;:::o;5582:177::-;5692:60;5746:5;5692:60;:::i;:::-;5687:3;5680:73;5582:177;;:::o;5765:268::-;5881:4;5919:2;5908:9;5904:18;5896:26;;5932:94;6023:1;6012:9;6008:17;5999:6;5932:94;:::i;:::-;5765:268;;;;:::o;6039:474::-;6107:6;6115;6164:2;6152:9;6143:7;6139:23;6135:32;6132:119;;;6170:79;;:::i;:::-;6132:119;6290:1;6315:53;6360:7;6351:6;6340:9;6336:22;6315:53;:::i;:::-;6305:63;;6261:117;6417:2;6443:53;6488:7;6479:6;6468:9;6464:22;6443:53;:::i;:::-;6433:63;;6388:118;6039:474;;;;;:::o;6519:180::-;6567:77;6564:1;6557:88;6664:4;6661:1;6654:15;6688:4;6685:1;6678:15;6705:320;6749:6;6786:1;6780:4;6776:12;6766:22;;6833:1;6827:4;6823:12;6854:18;6844:81;;6910:4;6902:6;6898:17;6888:27;;6844:81;6972:2;6964:6;6961:14;6941:18;6938:38;6935:84;;6991:18;;:::i;:::-;6935:84;6756:269;6705:320;;;:::o;7031:118::-;7118:24;7136:5;7118:24;:::i;:::-;7113:3;7106:37;7031:118;;:::o;7155:222::-;7248:4;7286:2;7275:9;7271:18;7263:26;;7299:71;7367:1;7356:9;7352:17;7343:6;7299:71;:::i;:::-;7155:222;;;;:::o;7383:116::-;7453:21;7468:5;7453:21;:::i;:::-;7446:5;7443:32;7433:60;;7489:1;7486;7479:12;7433:60;7383:116;:::o;7505:137::-;7559:5;7590:6;7584:13;7575:22;;7606:30;7630:5;7606:30;:::i;:::-;7505:137;;;;:::o;7648:345::-;7715:6;7764:2;7752:9;7743:7;7739:23;7735:32;7732:119;;;7770:79;;:::i;:::-;7732:119;7890:1;7915:61;7968:7;7959:6;7948:9;7944:22;7915:61;:::i;:::-;7905:71;;7861:125;7648:345;;;;:::o;7999:172::-;8139:24;8135:1;8127:6;8123:14;8116:48;7999:172;:::o;8177:366::-;8319:3;8340:67;8404:2;8399:3;8340:67;:::i;:::-;8333:74;;8416:93;8505:3;8416:93;:::i;:::-;8534:2;8529:3;8525:12;8518:19;;8177:366;;;:::o;8549:419::-;8715:4;8753:2;8742:9;8738:18;8730:26;;8802:9;8796:4;8792:20;8788:1;8777:9;8773:17;8766:47;8830:131;8956:4;8830:131;:::i;:::-;8822:139;;8549:419;;;:::o;8974:172::-;9114:24;9110:1;9102:6;9098:14;9091:48;8974:172;:::o;9152:366::-;9294:3;9315:67;9379:2;9374:3;9315:67;:::i;:::-;9308:74;;9391:93;9480:3;9391:93;:::i;:::-;9509:2;9504:3;9500:12;9493:19;;9152:366;;;:::o;9524:419::-;9690:4;9728:2;9717:9;9713:18;9705:26;;9777:9;9771:4;9767:20;9763:1;9752:9;9748:17;9741:47;9805:131;9931:4;9805:131;:::i;:::-;9797:139;;9524:419;;;:::o;9949:442::-;10098:4;10136:2;10125:9;10121:18;10113:26;;10149:71;10217:1;10206:9;10202:17;10193:6;10149:71;:::i;:::-;10230:72;10298:2;10287:9;10283:18;10274:6;10230:72;:::i;:::-;10312;10380:2;10369:9;10365:18;10356:6;10312:72;:::i;:::-;9949:442;;;;;;:::o;10397:180::-;10445:77;10442:1;10435:88;10542:4;10539:1;10532:15;10566:4;10563:1;10556:15;10583:191;10623:3;10642:20;10660:1;10642:20;:::i;:::-;10637:25;;10676:20;10694:1;10676:20;:::i;:::-;10671:25;;10719:1;10716;10712:9;10705:16;;10740:3;10737:1;10734:10;10731:36;;;10747:18;;:::i;:::-;10731:36;10583:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "966600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"authority()": "infinite",
								"balanceOf(address)": "2829",
								"burn(address,uint256)": "infinite",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 222,
									"end": 397,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 222,
									"end": 397,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "644A4F4200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "644A4F4200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 314,
									"end": 324,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 287,
									"end": 296,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 287,
									"end": 296,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 287,
									"end": 325,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 336,
									"end": 373,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 342,
									"end": 352,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 354,
									"end": 372,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 336,
									"end": 341,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 336,
									"end": 341,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 336,
									"end": 341,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 336,
									"end": 373,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 336,
									"end": 373,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 336,
									"end": 373,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 336,
									"end": 373,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 336,
									"end": 373,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 222,
									"end": 397,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 11,
									"value": "113"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 11,
									"value": "116"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 11,
									"value": "145"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 11,
									"value": "156"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 152,
									"end": 746,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 152,
									"end": 746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 152,
									"end": 746,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa91cdb088490144c686aa86b80432617b59ff15aeb789e252ce5178e0e8836764736f6c63430008190033",
									".code": [
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "9DC29FAC"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "BF7E214F"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 746,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 152,
											"end": 746,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 405,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 405,
											"end": 568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 576,
											"end": 743,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 576,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 576,
											"end": 743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 182,
											"end": 213,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 182,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 182,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 405,
											"end": 568,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 475,
											"end": 484,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 475,
											"end": 484,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 484,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 475,
											"end": 493,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 475,
											"end": 493,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 475,
											"end": 493,
											"name": "PUSH",
											"source": 10,
											"value": "AA271E1A"
										},
										{
											"begin": 494,
											"end": 504,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 475,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 475,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 475,
											"end": 505,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 475,
											"end": 505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 467,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 467,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 467,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 543,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 543,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 543,
											"end": 560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 543,
											"end": 560,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 543,
											"end": 560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 405,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 576,
											"end": 743,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 576,
											"end": 743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 648,
											"end": 657,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 648,
											"end": 666,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 648,
											"end": 666,
											"name": "PUSH",
											"source": 10,
											"value": "4334614A"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 648,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 648,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 648,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 648,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 640,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 640,
											"end": 705,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 640,
											"end": 705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 722,
											"end": 726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 728,
											"end": 734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 716,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 716,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 716,
											"end": 735,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 576,
											"end": 743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 182,
											"end": 213,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 182,
											"end": 213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5141,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5081,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5123,
											"end": 5135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5123,
											"end": 5135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5141,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5289,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5147,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5257,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5275,
											"end": 5280,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5257,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5257,
											"end": 5281,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5257,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5248,
											"end": 5282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5248,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5230,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5230,
											"end": 5283,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5230,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5217,
											"end": 5283,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5217,
											"end": 5283,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5289,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5147,
											"end": 5289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5421,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5295,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5345,
											"end": 5354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5409,
											"end": 5414,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5378,
											"end": 5415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 5378,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5427,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5533,
											"end": 5570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5570,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 5533,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5570,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5427,
											"end": 5576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5759,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5582,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5692,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 5692,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5680,
											"end": 5753,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5759,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5881,
											"end": 5885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5917,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 6023,
											"end": 6024,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6008,
											"end": 6025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5932,
											"end": 6026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 6026,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 5932,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 6033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6107,
											"end": 6113,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6150,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6139,
											"end": 6162,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6135,
											"end": 6167,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6251,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 6132,
											"end": 6251,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6170,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 6170,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6132,
											"end": 6251,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 6132,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 6360,
											"end": 6367,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6357,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6336,
											"end": 6358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6315,
											"end": 6368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6368,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 6315,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6305,
											"end": 6368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6305,
											"end": 6368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6261,
											"end": 6378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6443,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 6488,
											"end": 6495,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6464,
											"end": 6486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6443,
											"end": 6496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6496,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 6443,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6496,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6496,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6039,
											"end": 6513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6519,
											"end": 6699,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 6519,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6644,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6564,
											"end": 6565,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6693,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 7025,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 6705,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6780,
											"end": 6784,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6788,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6766,
											"end": 6788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6766,
											"end": 6788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6823,
											"end": 6835,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 6844,
											"end": 6925,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 6914,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 6902,
											"end": 6908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6915,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6888,
											"end": 6915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6888,
											"end": 6915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6844,
											"end": 6925,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 6844,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6961,
											"end": 6975,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 6959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6938,
											"end": 6976,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6935,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 6935,
											"end": 7019,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 6991,
											"end": 7009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6935,
											"end": 7019,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 6935,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6756,
											"end": 7025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 7025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 7025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 7025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7149,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7031,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 7136,
											"end": 7141,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 7118,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 7118,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7113,
											"end": 7116,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7143,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7031,
											"end": 7149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7263,
											"end": 7289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7365,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7343,
											"end": 7349,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7299,
											"end": 7370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7299,
											"end": 7370,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 7299,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7383,
											"end": 7499,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 7383,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 7468,
											"end": 7473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 7453,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7474,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 7453,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7446,
											"end": 7451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7443,
											"end": 7475,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7479,
											"end": 7491,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7433,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7383,
											"end": 7499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7383,
											"end": 7499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7559,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7597,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7606,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 7630,
											"end": 7635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7606,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 7606,
											"end": 7636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7606,
											"end": 7636,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 7606,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7743,
											"end": 7750,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7739,
											"end": 7762,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 7767,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7770,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 7770,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7849,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 7770,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7732,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 7891,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7968,
											"end": 7975,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7915,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 7915,
											"end": 7976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7915,
											"end": 7976,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7915,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 7976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 7976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7861,
											"end": 7986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7648,
											"end": 7993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8171,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 7999,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8139,
											"end": 8163,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7420617574686F72697A656420746F206D696E7400000000000000000000"
										},
										{
											"begin": 8135,
											"end": 8136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8123,
											"end": 8137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8116,
											"end": 8164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7999,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8543,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 8177,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8404,
											"end": 8406,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 8399,
											"end": 8402,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8340,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 8340,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8340,
											"end": 8407,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8340,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8407,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8416,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8505,
											"end": 8508,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8416,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 8416,
											"end": 8509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8416,
											"end": 8509,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8416,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8534,
											"end": 8536,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8529,
											"end": 8532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8537,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8543,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8177,
											"end": 8543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8968,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 8549,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8730,
											"end": 8756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8730,
											"end": 8756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8802,
											"end": 8811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8796,
											"end": 8800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8792,
											"end": 8812,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8790,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8830,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8956,
											"end": 8960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8830,
											"end": 8961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 8830,
											"end": 8961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8830,
											"end": 8961,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8830,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8822,
											"end": 8961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8968,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8974,
											"end": 9146,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 8974,
											"end": 9146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9114,
											"end": 9138,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7420617574686F72697A656420746F206275726E00000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9102,
											"end": 9108,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9098,
											"end": 9112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9091,
											"end": 9139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8974,
											"end": 9146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8974,
											"end": 9146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9518,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 9152,
											"end": 9518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9294,
											"end": 9297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9315,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 9379,
											"end": 9381,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 9374,
											"end": 9377,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9315,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 9315,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9315,
											"end": 9382,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 9315,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9382,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9391,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9480,
											"end": 9483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9391,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 9391,
											"end": 9484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9391,
											"end": 9484,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9391,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9509,
											"end": 9511,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9504,
											"end": 9507,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9500,
											"end": 9512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9943,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 9524,
											"end": 9943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9690,
											"end": 9694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9730,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9731,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9705,
											"end": 9731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9705,
											"end": 9731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9777,
											"end": 9786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9771,
											"end": 9775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9767,
											"end": 9787,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9763,
											"end": 9764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9765,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9741,
											"end": 9788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 9805,
											"end": 9936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9805,
											"end": 9936,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9805,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9797,
											"end": 9936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9797,
											"end": 9936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10098,
											"end": 10102,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10138,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10121,
											"end": 10139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10149,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10217,
											"end": 10218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10215,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10202,
											"end": 10219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10193,
											"end": 10199,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10149,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 10149,
											"end": 10220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10149,
											"end": 10220,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10149,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10298,
											"end": 10300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10287,
											"end": 10296,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10280,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 10230,
											"end": 10302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10230,
											"end": 10302,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10230,
											"end": 10302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10312,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10380,
											"end": 10382,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10369,
											"end": 10378,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10365,
											"end": 10383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10356,
											"end": 10362,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10312,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 10312,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10312,
											"end": 10384,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10312,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10397,
											"end": 10577,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 10397,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10445,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10442,
											"end": 10443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10435,
											"end": 10523,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10546,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10539,
											"end": 10540,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10532,
											"end": 10547,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10566,
											"end": 10570,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10571,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10623,
											"end": 10626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 10660,
											"end": 10661,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 10642,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 10642,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10637,
											"end": 10662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10637,
											"end": 10662,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 10694,
											"end": 10695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 10676,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10671,
											"end": 10696,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10671,
											"end": 10696,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10712,
											"end": 10721,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10705,
											"end": 10721,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10740,
											"end": 10743,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10737,
											"end": 10738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10734,
											"end": 10744,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10767,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 10731,
											"end": 10767,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 10747,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10731,
											"end": 10767,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 10731,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10583,
											"end": 10774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"TokenAuthority.sol",
								"dJOB.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authority()": "bf7e214f",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract TokenAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"dJOB.sol\":\"dJOB\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"TokenAuthority.sol\":{\"keccak256\":\"0x452a1cb09e511294f419b9fa1d9b21a805bb979280aa06d8b6885df9d334472e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff27966416f5f6541f709fa7f98206bb9b5f34f4a1b1c188ace780a37e69d88\",\"dweb:/ipfs/QmUAeRe88NAQygPkpWKRGssVBwLvp46ukcUmJmJymMGKtd\"]},\"dJOB.sol\":{\"keccak256\":\"0x7be2cef3f44de5967cb652a6a5fc5a74e1fc3a497fc679a72bf5dcbf05899755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://610c0c983fedf75d1b3aaf092f05b347cb508f553e506c21d941eaa02e185fa9\",\"dweb:/ipfs/QmPWEps7JvobpomdrbyFMqbihkP9qmb3GqzBhEhDvmFYtM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "dJOB.sol:dJOB",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "dJOB.sol:dJOB",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "dJOB.sol:dJOB",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "dJOB.sol:dJOB",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "dJOB.sol:dJOB",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1380,
								"contract": "dJOB.sol:dJOB",
								"label": "authority",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(TokenAuthority)1371"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(TokenAuthority)1371": {
								"encoding": "inplace",
								"label": "contract TokenAuthority",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1030,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1030,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1030,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1030,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 1030,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 1030,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 1030,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 1030,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 1030,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 1030,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 1030,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 1030,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 1030,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 1030,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 1030,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 1030,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 1030,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9768:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1134,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1134,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1134,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"688:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "688:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "678:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "845:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "862:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "882:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "855:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "790:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "839:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:7"
									},
									"scope": 1188,
									"src": "763:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "660:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 1200,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"TokenAuthority.sol": {
				"ast": {
					"absolutePath": "TokenAuthority.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						],
						"TokenAuthority": [
							1371
						]
					},
					"id": 1372,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1372,
							"sourceUnit": 296,
							"src": "61:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1205,
										"name": "AccessControl",
										"nameLocations": [
											"270:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "270:13:9"
									},
									"id": 1206,
									"nodeType": "InheritanceSpecifier",
									"src": "270:13:9"
								}
							],
							"canonicalName": "TokenAuthority",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1204,
								"nodeType": "StructuredDocumentation",
								"src": "123:118:9",
								"text": " @title TokenAuthority\n @dev Manages roles and access rights for the dJOB token and platform contracts."
							},
							"fullyImplemented": true,
							"id": 1371,
							"linearizedBaseContracts": [
								1371,
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "TokenAuthority",
							"nameLocation": "252:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1211,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "315:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "291:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1207,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "291:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1209,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "339:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1208,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "329:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "329:24:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1216,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "384:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "360:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1212,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "360:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1214,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "408:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1213,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "398:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "398:24:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f5b541a6",
									"id": 1221,
									"mutability": "constant",
									"name": "OPERATOR_ROLE",
									"nameLocation": "453:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1371,
									"src": "429:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1217,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4f50455241544f525f524f4c45",
												"id": 1219,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "479:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												},
												"value": "OPERATOR_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
													"typeString": "literal_string \"OPERATOR_ROLE\""
												}
											],
											"id": 1218,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "469:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "469:26:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "531:181:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "553:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1228,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "573:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1226,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "542:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "542:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "542:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1232,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "601:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1233,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "614:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1231,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "590:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "590:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "590:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "642:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1238,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "655:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1236,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "631:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "631:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "683:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1243,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "698:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1241,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "672:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "672:32:9"
											}
										]
									},
									"id": 1247,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "524:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "516:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:15:9"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:0:9"
									},
									"scope": 1371,
									"src": "504:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "796:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "817:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1257,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "830:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1255,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "807:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "807:31:9"
											}
										]
									},
									"functionSelector": "261707fa",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1252,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "776:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyRole",
												"nameLocations": [
													"767:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "767:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "767:28:9"
										}
									],
									"name": "grantMinter",
									"nameLocation": "729:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "749:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "741:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:17:9"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:9"
									},
									"scope": 1371,
									"src": "720:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "931:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "953:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1271,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "966:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1269,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "942:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "942:32:9"
											}
										]
									},
									"functionSelector": "cfbd4885",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1266,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "911:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1267,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyRole",
												"nameLocations": [
													"902:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "902:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "902:28:9"
										}
									],
									"name": "revokeMinter",
									"nameLocation": "863:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:17:9"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:9"
									},
									"scope": 1371,
									"src": "854:128:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "1066:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1087:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1285,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "1100:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1283,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1077:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "1077:31:9"
											}
										]
									},
									"functionSelector": "10511f96",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1280,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1046:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1279,
												"name": "onlyRole",
												"nameLocations": [
													"1037:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1037:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1037:28:9"
										}
									],
									"name": "grantBurner",
									"nameLocation": "999:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1019:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1011:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:9"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:0:9"
									},
									"scope": 1371,
									"src": "990:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "1201:51:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1223:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1299,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "1236:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1297,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1212:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "1212:32:9"
											}
										]
									},
									"functionSelector": "0900cc33",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1294,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1181:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1295,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1293,
												"name": "onlyRole",
												"nameLocations": [
													"1172:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1172:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1172:28:9"
										}
									],
									"name": "revokeBurner",
									"nameLocation": "1133:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1154:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "1146:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:17:9"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1201:0:9"
									},
									"scope": 1371,
									"src": "1124:128:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "1338:52:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1359:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1313,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "1374:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1311,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1349:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1349:33:9"
											}
										]
									},
									"functionSelector": "e348da13",
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1308,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1318:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1309,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyRole",
												"nameLocations": [
													"1309:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1309:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1309:28:9"
										}
									],
									"name": "grantOperator",
									"nameLocation": "1269:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1291:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1283:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:17:9"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:9"
									},
									"scope": 1371,
									"src": "1260:130:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "1477:53:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1326,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1499:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1327,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "1514:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1488:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "1488:34:9"
											}
										]
									},
									"functionSelector": "fad8b32a",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1322,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1457:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyRole",
												"nameLocations": [
													"1448:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1448:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1448:28:9"
										}
									],
									"name": "revokeOperator",
									"nameLocation": "1407:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1430:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1422:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:17:9"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:9"
									},
									"scope": 1371,
									"src": "1398:132:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "1602:55:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "1628:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1340,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "1641:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1620:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1337,
												"id": 1342,
												"nodeType": "Return",
												"src": "1613:36:9"
											}
										]
									},
									"functionSelector": "aa271e1a",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nameLocation": "1547:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1564:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1556:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:17:9"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1596:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1596:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:6:9"
									},
									"scope": 1371,
									"src": "1538:119:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "1729:55:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "BURNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "1755:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "1768:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1351,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1747:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1747:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1355,
												"nodeType": "Return",
												"src": "1740:36:9"
											}
										]
									},
									"functionSelector": "4334614a",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBurner",
									"nameLocation": "1674:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1691:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1683:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:17:9"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1723:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1723:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:6:9"
									},
									"scope": 1371,
									"src": "1665:119:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "1858:57:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "OPERATOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1884:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "1899:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1364,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1876:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1876:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1368,
												"nodeType": "Return",
												"src": "1869:38:9"
											}
										]
									},
									"functionSelector": "6d70f7ae",
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nameLocation": "1801:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1820:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1812:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:17:9"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1852:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:6:9"
									},
									"scope": 1371,
									"src": "1792:123:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1372,
							"src": "243:1675:9",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "33:1887:9"
				},
				"id": 9
			},
			"dJOB.sol": {
				"ast": {
					"absolutePath": "dJOB.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"ERC20": [
							1030
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						],
						"TokenAuthority": [
							1371
						],
						"dJOB": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1452,
							"sourceUnit": 1031,
							"src": "61:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "TokenAuthority.sol",
							"file": "./TokenAuthority.sol",
							"id": 1375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1452,
							"sourceUnit": 1372,
							"src": "118:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1376,
										"name": "ERC20",
										"nameLocations": [
											"169:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "169:5:10"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "169:5:10"
								}
							],
							"canonicalName": "dJOB",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1451,
							"linearizedBaseContracts": [
								1451,
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "dJOB",
							"nameLocation": "161:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bf7e214f",
									"id": 1380,
									"mutability": "mutable",
									"name": "authority",
									"nameLocation": "204:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1451,
									"src": "182:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_TokenAuthority_$1371",
										"typeString": "contract TokenAuthority"
									},
									"typeName": {
										"id": 1379,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1378,
											"name": "TokenAuthority",
											"nameLocations": [
												"182:14:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1371,
											"src": "182:14:10"
										},
										"referencedDeclaration": 1371,
										"src": "182:14:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_TokenAuthority_$1371",
											"typeString": "contract TokenAuthority"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "276:121:10",
										"statements": [
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1389,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "287:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TokenAuthority_$1371",
															"typeString": "contract TokenAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1391,
																"name": "_authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "314:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1390,
															"name": "TokenAuthority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "299:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TokenAuthority_$1371_$",
																"typeString": "type(contract TokenAuthority)"
															}
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "299:26:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_TokenAuthority_$1371",
															"typeString": "contract TokenAuthority"
														}
													},
													"src": "287:38:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_TokenAuthority_$1371",
														"typeString": "contract TokenAuthority"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "287:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "342:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "346:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "342:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "354:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "364:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "370:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "364:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "354:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 1395,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "336:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "336:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "336:37:10"
											}
										]
									},
									"id": 1406,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "644a4f42",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "260:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2cfb6c519f0198f8f926e4925f249dad17a3bffb95e4a0d078e489f722472d93",
														"typeString": "literal_string \"dJOB\""
													},
													"value": "dJOB"
												},
												{
													"hexValue": "644a4f42",
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "268:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2cfb6c519f0198f8f926e4925f249dad17a3bffb95e4a0d078e489f722472d93",
														"typeString": "literal_string \"dJOB\""
													},
													"value": "dJOB"
												}
											],
											"id": 1387,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1384,
												"name": "ERC20",
												"nameLocations": [
													"254:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "254:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "254:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "_authority",
												"nameLocation": "242:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "234:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:20:10"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:0:10"
									},
									"scope": 1451,
									"src": "222:175:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "456:112:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1416,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "494:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "498:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "494:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1414,
																	"name": "authority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "475:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenAuthority_$1371",
																		"typeString": "contract TokenAuthority"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "485:8:10",
																"memberName": "isMinter",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1344,
																"src": "475:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "475:30:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															},
															"value": "Not authorized to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "467:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "467:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "467:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1423,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "549:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "553:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1422,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "543:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "543:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "543:17:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "414:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "427:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "419:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "439:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "431:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:28:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "456:0:10"
									},
									"scope": 1451,
									"src": "405:163:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "629:114:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1438,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "667:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "671:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "667:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1436,
																	"name": "authority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "648:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenAuthority_$1371",
																		"typeString": "contract TokenAuthority"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "658:8:10",
																"memberName": "isBurner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1357,
																"src": "648:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "648:30:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206275726e",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "680:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																"typeString": "literal_string \"Not authorized to burn\""
															},
															"value": "Not authorized to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																"typeString": "literal_string \"Not authorized to burn\""
															}
														],
														"id": 1435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "640:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "640:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "640:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "722:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "728:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1444,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "716:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "716:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "716:19:10"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "585:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "598:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "590:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "612:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "604:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:30:10"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:10"
									},
									"scope": 1451,
									"src": "576:167:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "152:594:10",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "33:715:10"
				},
				"id": 10
			}
		}
	}
}